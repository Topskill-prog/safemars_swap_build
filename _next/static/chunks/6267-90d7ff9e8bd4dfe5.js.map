{"version":3,"file":"static/chunks/6267-90d7ff9e8bd4dfe5.js","mappings":"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","sources":["webpack://_N_E/./packages/uikit/src/components/Card/StyledCard.tsx","webpack://_N_E/./packages/uikit/src/components/Card/Card.tsx","webpack://_N_E/./packages/uikit/src/components/Input/Input.tsx","webpack://_N_E/./packages/uikit/src/components/Input/types.ts","webpack://_N_E/./src/config/constants/info.ts","webpack://_N_E/./src/state/info/queries/pools/poolData.ts","webpack://_N_E/./src/utils/getBlocksFromTimestamps.ts","webpack://_N_E/./src/utils/getChangeForPeriod.ts","webpack://_N_E/./src/utils/getDeltaTimestamps.ts","webpack://_N_E/./src/utils/getLpFeesAndApr.ts","webpack://_N_E/./src/utils/graphql.ts","webpack://_N_E/./src/utils/requestWithTimeout.ts","webpack://_N_E/./src/views/Info/hooks/useBlocksFromTimestamps.ts","webpack://_N_E/./src/views/Info/utils/infoDataHelpers.ts","webpack://_N_E/./src/views/Info/utils/infoQueryHelpers.ts"],"sourcesContent":["import _tagged_template_literal from \"@swc/helpers/src/_tagged_template_literal.mjs\";\nfunction _templateObject() {\n    var data = _tagged_template_literal([\n        \"\\n  0% {\\n    background-position: 50% 0%;\\n  }\\n  50% {\\n    background-position: 50% 100%;\\n  }\\n  100% {\\n    background-position: 50% 0%;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = _tagged_template_literal([\n        \"\\n      animation: \",\n        \" 3s ease infinite;\\n      background-size: 400% 400%;\\n    \"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = _tagged_template_literal([\n        \"\\n  background: \",\n        \";\\n  border-radius: \",\n        \";\\n  color: \",\n        \";\\n  overflow: hidden;\\n  position: relative;\\n\\n  \",\n        \"\\n\\n  padding: 1px 1px 3px 1px;\\n\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject3() {\n    var data = _tagged_template_literal([\n        \"\\n  width: 100%;\\n  height: 100%;\\n  overflow: \",\n        \";\\n  background: \",\n        \";\\n  border-radius: \",\n        \";\\n\"\n    ]);\n    _templateObject3 = function _templateObject3() {\n        return data;\n    };\n    return data;\n}\nimport styled, { keyframes, css } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { Box } from \"../Box\";\nvar PromotedGradient = keyframes(_templateObject());\n/**\n * Priority: Warning --> Success --> Active\n */ var getBorderColor = function(param) {\n    var isActive = param.isActive, isSuccess = param.isSuccess, isWarning = param.isWarning, borderBackground = param.borderBackground, theme = param.theme;\n    if (borderBackground) {\n        return borderBackground;\n    }\n    if (isWarning) {\n        return theme.colors.warning;\n    }\n    if (isSuccess) {\n        return theme.colors.success;\n    }\n    if (isActive) {\n        return \"linear-gradient(180deg, \".concat(theme.colors.primaryBright, \", \").concat(theme.colors.secondary, \")\");\n    }\n    return theme.colors.cardBorder;\n};\nexport var StyledCard = styled.div.withConfig({\n    componentId: \"sc-eecfaa46-0\"\n})(_templateObject2(), getBorderColor, function(param) {\n    var theme = param.theme;\n    return theme.radii.card;\n}, function(param) {\n    var theme = param.theme, isDisabled = param.isDisabled;\n    return theme.colors[isDisabled ? \"textDisabled\" : \"text\"];\n}, function(param) {\n    var isActive = param.isActive;\n    return isActive && css(_templateObject1(), PromotedGradient);\n}, space);\nexport var StyledCardInner = styled(Box).withConfig({\n    componentId: \"sc-eecfaa46-1\"\n})(_templateObject3(), function(param) {\n    var hasCustomBorder = param.hasCustomBorder;\n    return hasCustomBorder ? \"initial\" : \"inherit\";\n}, function(param) {\n    var theme = param.theme, background = param.background;\n    return background !== null && background !== void 0 ? background : theme.card.background;\n}, function(param) {\n    var theme = param.theme;\n    return theme.radii.card;\n});\nStyledCard.defaultProps = {\n    isActive: false,\n    isSuccess: false,\n    isWarning: false,\n    isDisabled: false\n};\n","import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _object_spread_props from \"@swc/helpers/src/_object_spread_props.mjs\";\nimport _object_without_properties from \"@swc/helpers/src/_object_without_properties.mjs\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { StyledCard, StyledCardInner } from \"./StyledCard\";\nvar Card = function(_param) {\n    var ribbon = _param.ribbon, children = _param.children, background = _param.background, props = _object_without_properties(_param, [\n        \"ribbon\",\n        \"children\",\n        \"background\"\n    ]);\n    return /*#__PURE__*/ _jsx(StyledCard, _object_spread_props(_object_spread({}, props), {\n        children: /*#__PURE__*/ _jsxs(StyledCardInner, {\n            background: background,\n            hasCustomBorder: !!props.borderBackground,\n            children: [\n                ribbon,\n                children\n            ]\n        })\n    }));\n};\nexport default Card;\n","import _tagged_template_literal from \"@swc/helpers/src/_tagged_template_literal.mjs\";\nfunction _templateObject() {\n    var data = _tagged_template_literal([\n        \"\\n  background-color: \",\n        \";\\n  border-radius: 16px;\\n  box-shadow: \",\n        \";\\n  color: \",\n        \";\\n  display: block;\\n  font-size: 16px;\\n  height: \",\n        \";\\n  outline: 0;\\n  padding: 0 16px;\\n  width: 100%;\\n  border: 1px solid \",\n        \";\\n\\n  &::placeholder {\\n    color: \",\n        \";\\n  }\\n\\n  &:disabled {\\n    background-color: \",\n        \";\\n    box-shadow: none;\\n    color: \",\n        \";\\n    cursor: not-allowed;\\n  }\\n\\n  &:focus:not(:disabled) {\\n    box-shadow: \",\n        \";\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nimport styled from \"styled-components\";\nimport { scales } from \"./types\";\n/**\n * Priority: Warning --> Success\n */ var getBoxShadow = function(param) {\n    var _isSuccess = param.isSuccess, isSuccess = _isSuccess === void 0 ? false : _isSuccess, _isWarning = param.isWarning, isWarning = _isWarning === void 0 ? false : _isWarning, theme = param.theme;\n    if (isWarning) {\n        return theme.shadows.warning;\n    }\n    if (isSuccess) {\n        return theme.shadows.success;\n    }\n    return theme.shadows.inset;\n};\nvar getHeight = function(param) {\n    var _scale = param.scale, scale = _scale === void 0 ? scales.MD : _scale;\n    switch(scale){\n        case scales.SM:\n            return \"32px\";\n        case scales.LG:\n            return \"48px\";\n        case scales.MD:\n        default:\n            return \"40px\";\n    }\n};\nvar Input = styled.input.withConfig({\n    componentId: \"sc-c22a9310-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.input;\n}, getBoxShadow, function(param) {\n    var theme = param.theme;\n    return theme.colors.text;\n}, getHeight, function(param) {\n    var theme = param.theme;\n    return theme.colors.inputSecondary;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.textSubtle;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.backgroundDisabled;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.textDisabled;\n}, function(param) {\n    var theme = param.theme, isWarning = param.isWarning, isSuccess = param.isSuccess;\n    if (isWarning) {\n        return theme.shadows.warning;\n    }\n    if (isSuccess) {\n        return theme.shadows.success;\n    }\n    return theme.shadows.focus;\n});\nInput.defaultProps = {\n    scale: scales.MD,\n    isSuccess: false,\n    isWarning: false\n};\nexport default Input;\n","export var scales = {\n    SM: \"sm\",\n    MD: \"md\",\n    LG: \"lg\"\n};\n","export const MINIMUM_SEARCH_CHARACTERS = 2\n\nexport const WEEKS_IN_YEAR = 52.1429\n\nexport const TOTAL_FEE = 0.0025\nexport const LP_HOLDERS_FEE = 0.0017\nexport const TREASURY_FEE = 0.000225\nexport const BUYBACK_FEE = 0.000575\n\nexport const PCS_V2_START = 1619136000 // April 23, 2021, 12:00:00 AM\nexport const ONE_DAY_UNIX = 86400 // 24h * 60m * 60s\nexport const ONE_HOUR_SECONDS = 3600\n\nexport const ITEMS_PER_INFO_TABLE_PAGE = 10\n\n// These tokens are either incorrectly priced or have some other issues that spoil the query data\n// None of them present any interest as they have almost 0 daily trade volume\nexport const TOKEN_BLACKLIST = [\n  // These ones are copied from v1 info\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\n  '0xe40fc6ff5f2895b44268fd2e1a421e07f567e007',\n  '0xfd158609228b43aa380140b46fff3cdf9ad315de',\n  '0xc00af6212fcf0e6fd3143e692ccd4191dc308bea',\n  '0x205969b3ad459f7eba0dee07231a6357183d3fb6',\n  '0x0bd67d358636fd7b0597724aa4f20beedbf3073a',\n  '0xedf5d2a561e8a3cb5a846fbce24d2ccd88f50075',\n  '0x702b0789a3d4dade1688a0c8b7d944e5ba80fc30',\n  '0x041929a760d7049edaef0db246fa76ec975e90cc',\n  '0xba098df8c6409669f5e6ec971ac02cd5982ac108',\n  '0x1bbed115afe9e8d6e9255f18ef10d43ce6608d94',\n  '0xe99512305bf42745fae78003428dcaf662afb35d',\n  '0xbE609EAcbFca10F6E5504D39E3B113F808389056',\n  '0x847daf9dfdc22d5c61c4a857ec8733ef5950e82e',\n  '0xdbf8913dfe14536c0dae5dd06805afb2731f7e7b',\n  // These ones are newly found\n  '0xF1D50dB2C40b63D2c598e2A808d1871a40b1E653',\n  '0x4269e4090ff9dfc99d8846eb0d42e67f01c3ac8b',\n]\n","/* eslint-disable no-param-reassign */\nimport { gql } from 'graphql-request'\nimport { useEffect, useState } from 'react'\nimport { PoolData } from 'state/info/types'\nimport { infoClient } from 'utils/graphql'\nimport { getChangeForPeriod } from 'utils/getChangeForPeriod'\nimport { getLpFeesAndApr } from 'utils/getLpFeesAndApr'\nimport { getDeltaTimestamps } from 'utils/getDeltaTimestamps'\nimport { useBlocksFromTimestamps } from 'views/Info/hooks/useBlocksFromTimestamps'\nimport { getPercentChange } from 'views/Info/utils/infoDataHelpers'\n\ninterface PoolFields {\n  id: string\n  reserve0: string\n  reserve1: string\n  reserveUSD: string\n  volumeUSD: string\n  token0Price: string\n  token1Price: string\n  token0: {\n    id: string\n    symbol: string\n    name: string\n  }\n  token1: {\n    id: string\n    symbol: string\n    name: string\n  }\n}\n\nexport interface FormattedPoolFields\n  extends Omit<PoolFields, 'volumeUSD' | 'reserveUSD' | 'reserve0' | 'reserve1' | 'token0Price' | 'token1Price'> {\n  volumeUSD: number\n  reserveUSD: number\n  reserve0: number\n  reserve1: number\n  token0Price: number\n  token1Price: number\n}\n\ninterface PoolsQueryResponse {\n  now: PoolFields[]\n  oneDayAgo: PoolFields[]\n  twoDaysAgo: PoolFields[]\n  oneWeekAgo: PoolFields[]\n  twoWeeksAgo: PoolFields[]\n}\n\n/**\n * Data for displaying pool tables (on multiple pages, used throughout the site)\n * Note: Don't try to refactor it to use variables, server throws error if blocks passed as undefined variable\n * only works if its hard-coded into query string\n */\nconst POOL_AT_BLOCK = (block: number | null, pools: string[]) => {\n  const blockString = block ? `block: {number: ${block}}` : ``\n  const addressesString = `[\"${pools.join('\",\"')}\"]`\n  return `pairs(\n    where: { id_in: ${addressesString} }\n    ${blockString}\n    orderBy: trackedReserveETH\n    orderDirection: desc\n  ) {\n    id\n    reserve0\n    reserve1\n    reserveUSD\n    volumeUSD\n    token0Price\n    token1Price\n    token0 {\n      id\n      symbol\n      name\n    }\n    token1 {\n      id\n      symbol\n      name\n    }\n  }`\n}\n\nexport const fetchPoolData = async (\n  block24h: number,\n  block48h: number,\n  block7d: number,\n  block14d: number,\n  poolAddresses: string[],\n) => {\n  try {\n    const query = gql`\n      query pools {\n        now: ${POOL_AT_BLOCK(null, poolAddresses)}\n        oneDayAgo: ${POOL_AT_BLOCK(block24h, poolAddresses)}\n        twoDaysAgo: ${POOL_AT_BLOCK(block48h, poolAddresses)}\n        oneWeekAgo: ${POOL_AT_BLOCK(block7d, poolAddresses)}\n        twoWeeksAgo: ${POOL_AT_BLOCK(block14d, poolAddresses)}\n      }\n    `\n    const data = await infoClient.request<PoolsQueryResponse>(query)\n    return { data, error: false }\n  } catch (error) {\n    console.error('Failed to fetch pool data', error)\n    return { error: true }\n  }\n}\n\n// Transforms pools into \"0xADDRESS: { ...PoolFields }\" format and cast strings to numbers\nexport const parsePoolData = (pairs?: PoolFields[]) => {\n  if (!pairs) {\n    return {}\n  }\n  return pairs.reduce((accum: { [address: string]: FormattedPoolFields }, poolData) => {\n    const { volumeUSD, reserveUSD, reserve0, reserve1, token0Price, token1Price } = poolData\n    accum[poolData.id] = {\n      ...poolData,\n      volumeUSD: parseFloat(volumeUSD),\n      reserveUSD: parseFloat(reserveUSD),\n      reserve0: parseFloat(reserve0),\n      reserve1: parseFloat(reserve1),\n      token0Price: parseFloat(token0Price),\n      token1Price: parseFloat(token1Price),\n    }\n    return accum\n  }, {})\n}\n\nconst getName = (token: any) => {\n  if (token.id.toLowerCase() === \"0xe81ca6eb09bd7d28ebc6362cd531d44528dcbf0d\")\n    return [\"XAU\", \"XAU\"]\n  return [token.name, token.symbol]\n}\n\ninterface PoolDatas {\n  error: boolean\n  data?: {\n    [address: string]: PoolData\n  }\n}\n\n/**\n * Fetch top pools by liquidity\n */\nconst usePoolDatas = (poolAddresses: string[]): PoolDatas => {\n  const [fetchState, setFetchState] = useState<PoolDatas>({ error: false })\n  const [t24h, t48h, t7d, t14d] = getDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24h, t48h, t7d, t14d])\n  const [block24h, block48h, block7d, block14d] = blocks ?? []\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { error, data } = await fetchPoolData(\n        block24h.number,\n        block48h.number,\n        block7d.number,\n        block14d.number,\n        poolAddresses,\n      )\n      if (error) {\n        setFetchState({ error: true })\n      } else {\n        const formattedPoolData = parsePoolData(data?.now)\n        const formattedPoolData24h = parsePoolData(data?.oneDayAgo)\n        const formattedPoolData48h = parsePoolData(data?.twoDaysAgo)\n        const formattedPoolData7d = parsePoolData(data?.oneWeekAgo)\n        const formattedPoolData14d = parsePoolData(data?.twoWeeksAgo)\n\n        // Calculate data and format\n        const formatted = poolAddresses.reduce((accum: { [address: string]: PoolData }, address) => {\n          // Undefined data is possible if pool is brand new and didn't exist one day ago or week ago.\n          const current: FormattedPoolFields | undefined = formattedPoolData[address]\n          const oneDay: FormattedPoolFields | undefined = formattedPoolData24h[address]\n          const twoDays: FormattedPoolFields | undefined = formattedPoolData48h[address]\n          const week: FormattedPoolFields | undefined = formattedPoolData7d[address]\n          const twoWeeks: FormattedPoolFields | undefined = formattedPoolData14d[address]\n\n          const [volumeUSD, volumeUSDChange] = getChangeForPeriod(\n            current?.volumeUSD,\n            oneDay?.volumeUSD,\n            twoDays?.volumeUSD,\n          )\n          const [volumeUSDWeek, volumeUSDChangeWeek] = getChangeForPeriod(\n            current?.volumeUSD,\n            week?.volumeUSD,\n            twoWeeks?.volumeUSD,\n          )\n\n          const liquidityUSD = current ? current.reserveUSD : 0\n\n          const liquidityUSDChange = getPercentChange(current?.reserveUSD, oneDay?.reserveUSD)\n\n          const liquidityToken0 = current ? current.reserve0 : 0\n          const liquidityToken1 = current ? current.reserve1 : 0\n\n          const { totalFees24h, totalFees7d, lpFees24h, lpFees7d, lpApr7d } = getLpFeesAndApr(\n            volumeUSD,\n            volumeUSDWeek,\n            liquidityUSD,\n          )\n\n          if (current) {\n            accum[address] = {\n              address,\n              token0: {\n                address: current.token0.id,\n                name: getName(current.token0)[0],\n                symbol: getName(current.token0)[1],\n              },\n              token1: {\n                address: current.token1.id,\n                name: getName(current.token1)[0],\n                symbol: getName(current.token1)[1],\n              },\n              token0Price: current.token0Price,\n              token1Price: current.token1Price,\n              volumeUSD,\n              volumeUSDChange,\n              volumeUSDWeek,\n              volumeUSDChangeWeek,\n              totalFees24h,\n              totalFees7d,\n              lpFees24h,\n              lpFees7d,\n              lpApr7d,\n              liquidityUSD,\n              liquidityUSDChange,\n              liquidityToken0,\n              liquidityToken1,\n            }\n          }\n\n          return accum\n        }, {})\n        setFetchState({ data: formatted, error: false })\n      }\n    }\n\n    const allBlocksAvailable = block24h?.number && block48h?.number && block7d?.number && block14d?.number\n    if (poolAddresses.length > 0 && allBlocksAvailable && !blockError) {\n      fetch()\n    }\n  }, [poolAddresses, block24h, block48h, block7d, block14d, blockError])\n\n  return fetchState\n}\n\nexport default usePoolDatas\n","import orderBy from 'lodash/orderBy'\nimport { gql } from 'graphql-request'\nimport { Block } from '../state/info/types'\nimport { multiQuery } from '../views/Info/utils/infoQueryHelpers'\nimport { BLOCKS_CLIENT } from '../config/constants/endpoints'\n\nconst getBlockSubqueries = (timestamps: number[]) =>\n  timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\n      timestamp + 600\n    } }) {\n      number\n    }`\n  })\n\nconst blocksQueryConstructor = (subqueries: string[]) => {\n  return gql`query blocks {\n    ${subqueries}\n  }`\n}\n\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @param {Array} timestamps\n */\nexport const getBlocksFromTimestamps = async (\n  timestamps: number[],\n  sortDirection: 'asc' | 'desc' = 'desc',\n  skipCount = 500,\n): Promise<Block[]> => {\n  if (timestamps?.length === 0) {\n    return []\n  }\n\n  const fetchedData: any = await multiQuery(\n    blocksQueryConstructor,\n    getBlockSubqueries(timestamps),\n    BLOCKS_CLIENT,\n    skipCount,\n  )\n\n  const blocks: Block[] = []\n  if (fetchedData) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key of Object.keys(fetchedData)) {\n      if (fetchedData[key].length > 0) {\n        blocks.push({\n          timestamp: key.split('t')[1],\n          number: parseInt(fetchedData[key][0].number, 10),\n        })\n      }\n    }\n    // graphql-request does not guarantee same ordering of batched requests subqueries, hence manual sorting\n    return orderBy(blocks, (block) => block.number, sortDirection)\n  }\n  return blocks\n}\n","import { getAmountChange, getPercentChange } from '../views/Info/utils/infoDataHelpers'\n\n/**\n * Given current value and value 1 and 2 periods (e.g. 1day + 2days, 1week - 2weeks) returns the amount change for latest period\n * and percentage change compared to the previous period.\n * @param valueNow - current value\n * @param valueOnePeriodAgo - value 1 period ago (e.g. 1 day or 1 week ago), period unit must be same as valueTwoPeriodsAgo\n * @param valueTwoPeriodsAgo - value 2 periods ago (e.g. 2 days or 2 weeks ago), period unit must be same as valueOnePeriodAgo\n * @returns amount change for the latest period and percentage change compared to previous period\n */\nexport const getChangeForPeriod = (\n  valueNow?: number,\n  valueOnePeriodAgo?: number,\n  valueTwoPeriodsAgo?: number,\n): [number, number] => {\n  const currentPeriodAmount = getAmountChange(valueNow, valueOnePeriodAgo)\n  const previousPeriodAmount = getAmountChange(valueOnePeriodAgo, valueTwoPeriodsAgo)\n  const percentageChange = getPercentChange(currentPeriodAmount, previousPeriodAmount)\n  return [currentPeriodAmount, percentageChange]\n}\n","import { getUnixTime, startOfMinute, subDays, subWeeks } from 'date-fns'\n\n/**\n * Returns UTC timestamps for 24h ago, 48h ago, 7d ago and 14d ago relative to current date and time\n */\nexport const getDeltaTimestamps = (): [number, number, number, number] => {\n  const utcCurrentTime = getUnixTime(new Date()) * 1000\n  const t24h = getUnixTime(startOfMinute(subDays(utcCurrentTime, 1)))\n  const t48h = getUnixTime(startOfMinute(subDays(utcCurrentTime, 2)))\n  const t7d = getUnixTime(startOfMinute(subWeeks(utcCurrentTime, 1)))\n  const t14d = getUnixTime(startOfMinute(subWeeks(utcCurrentTime, 2)))\n  return [t24h, t48h, t7d, t14d]\n}\n","import { TOTAL_FEE, LP_HOLDERS_FEE, WEEKS_IN_YEAR } from '../config/constants/info'\n\nexport const getLpFeesAndApr = (volumeUSD: number, volumeUSDWeek: number, liquidityUSD: number) => {\n  const totalFees24h = volumeUSD * TOTAL_FEE\n  const totalFees7d = volumeUSDWeek * TOTAL_FEE\n  const lpFees24h = volumeUSD * LP_HOLDERS_FEE\n  const lpFees7d = volumeUSDWeek * LP_HOLDERS_FEE\n\n  const lpApr7d = liquidityUSD > 0 ? (volumeUSDWeek * LP_HOLDERS_FEE * WEEKS_IN_YEAR * 100) / liquidityUSD : 0\n  return {\n    totalFees24h,\n    totalFees7d,\n    lpFees24h,\n    lpFees7d,\n    lpApr7d: lpApr7d !== Infinity ? lpApr7d : 0,\n  }\n}\n","import { BIT_QUERY, INFO_CLIENT, STABLESWAP_SUBGRAPH_CLIENT } from 'config/constants/endpoints'\nimport { GraphQLClient } from 'graphql-request'\n\n// Extra headers\n// Mostly for dev environment\n// No production env check since production preview might also need them\nexport const getGQLHeaders = (endpoint: string) => {\n  if (endpoint === INFO_CLIENT) {\n    return {\n      origin:\n        process.env.NEXT_PUBLIC_NODE_REAL_HEADER ||\n        // hack for inject CI secret on window\n        (typeof window !== 'undefined' &&\n          // @ts-ignore\n          window.nrHeader),\n    }\n  }\n  return undefined\n}\n\nexport const infoClient = new GraphQLClient(INFO_CLIENT)\n\nexport const infoServerClient = new GraphQLClient(INFO_CLIENT, {\n  headers: {\n    'X-Sf': process.env.SF_HEADER,\n  },\n  timeout: 5000,\n})\n\nexport const stableSwapClient = new GraphQLClient(STABLESWAP_SUBGRAPH_CLIENT, {\n  headers: getGQLHeaders(STABLESWAP_SUBGRAPH_CLIENT),\n})\n\nexport const bitQueryServerClient = new GraphQLClient(BIT_QUERY, {\n  headers: {\n    // only server, no `NEXT_PUBLIC` not going to expose in client\n    'X-API-KEY': process.env.BIT_QUERY_HEADER,\n  },\n  timeout: 5000,\n})\n","import { GraphQLClient } from 'graphql-request'\n\nconst requestWithTimeout = <T>(\n  graphQLClient: GraphQLClient,\n  request: string,\n  variables?: any,\n  timeout = 30000,\n): Promise<T> => {\n  return Promise.race([\n    variables ? graphQLClient.request<T>(request, variables) : graphQLClient.request<T>(request),\n    new Promise((_, reject) => {\n      setTimeout(() => {\n        reject(new Error(`Request timed out after ${timeout} milliseconds`))\n      }, timeout)\n    }),\n  ]) as Promise<T>\n}\n\nexport default requestWithTimeout\n","import { useState, useEffect } from 'react'\nimport { getBlocksFromTimestamps } from 'utils/getBlocksFromTimestamps'\nimport { Block } from 'state/info/types'\n\n/**\n * for a given array of timestamps, returns block entities\n * @param timestamps\n * @param sortDirection\n * @param skipCount\n */\nexport const useBlocksFromTimestamps = (\n  timestamps: number[],\n  sortDirection: 'asc' | 'desc' = 'desc',\n  skipCount = 1000,\n): {\n  blocks?: Block[]\n  error: boolean\n} => {\n  const [blocks, setBlocks] = useState<Block[]>()\n  const [error, setError] = useState(false)\n\n  const timestampsString = JSON.stringify(timestamps)\n  const blocksString = blocks ? JSON.stringify(blocks) : undefined\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const timestampsArray = JSON.parse(timestampsString)\n      const result = await getBlocksFromTimestamps(timestampsArray, sortDirection, skipCount)\n      if (result.length === 0) {\n        setError(true)\n      } else {\n        setBlocks(result)\n      }\n    }\n    const blocksArray = blocksString ? JSON.parse(blocksString) : undefined\n    if (!blocksArray && !error) {\n      fetchData()\n    }\n  }, [blocksString, error, skipCount, sortDirection, timestampsString])\n\n  return {\n    blocks,\n    error,\n  }\n}\n","/**\n * Get increase/decrease of value compared to the previous value (e.g. 24h volume compared to 24h volume the day before )\n * @param valueNow - more recent value\n * @param valueBefore - value to compare with\n */\nexport const getAmountChange = (valueNow?: number, valueBefore?: number) => {\n  if (valueNow && valueBefore) {\n    return valueNow - valueBefore\n  }\n  if (valueNow) {\n    return valueNow\n  }\n  return 0\n}\n\n/**\n * Get increase/decrease of value compared to the previous value as a percentage\n * @param valueNow - more recent value\n * @param valueBefore - value to compare with\n */\nexport const getPercentChange = (valueNow?: number, valueBefore?: number): number => {\n  if (valueNow && valueBefore) {\n    return ((valueNow - valueBefore) / valueBefore) * 100\n  }\n  return 0\n}\n","import { GraphQLClient } from 'graphql-request'\nimport { getGQLHeaders } from 'utils/graphql'\nimport requestWithTimeout from 'utils/requestWithTimeout'\n\n/**\n * Helper function to get large amount GraphQL subqueries\n * @param queryConstructor constructor function that combines subqueries\n * @param subqueries individual queries\n * @param endpoint GraphQL endpoint\n * @param skipCount how many subqueries to fire at a time\n * @returns\n */\nexport const multiQuery = async (\n  queryConstructor: (subqueries: string[]) => string,\n  subqueries: string[],\n  endpoint: string,\n  skipCount = 1000,\n) => {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n  const client = new GraphQLClient(endpoint, { headers: getGQLHeaders(endpoint) })\n  try {\n    while (!allFound) {\n      let end = subqueries.length\n      if (skip + skipCount < subqueries.length) {\n        end = skip + skipCount\n      }\n      const subqueriesSlice = subqueries.slice(skip, end)\n      // eslint-disable-next-line no-await-in-loop\n      const result: any = await requestWithTimeout(client, queryConstructor(subqueriesSlice))\n      fetchedData = {\n        ...fetchedData,\n        ...result,\n      }\n      allFound = Object.keys(result).length < skipCount || skip + skipCount > subqueries.length\n      skip += skipCount\n    }\n    return fetchedData\n  } catch (error) {\n    console.error('Failed to fetch info data', error)\n    return null\n  }\n}\n"],"names":["_templateObject","data","_tagged_template_literal","_templateObject1","_templateObject2","_templateObject3","PromotedGradient","keyframes","StyledCard","styled","componentId","param","isActive","isSuccess","isWarning","borderBackground","theme","colors","warning","success","concat","primaryBright","secondary","cardBorder","radii","card","isDisabled","css","space","StyledCardInner","Box","withConfig","hasCustomBorder","background","defaultProps","_param","ribbon","children","props","_object_without_properties","_jsx","_object_spread_props","_object_spread","_jsxs","Input","input","_isSuccess","_isWarning","shadows","inset","text","_scale","scale","scales","inputSecondary","textSubtle","backgroundDisabled","textDisabled","focus","SM","MD","LG","MINIMUM_SEARCH_CHARACTERS","WEEKS_IN_YEAR","TOTAL_FEE","LP_HOLDERS_FEE","TREASURY_FEE","BUYBACK_FEE","PCS_V2_START","ONE_DAY_UNIX","ONE_HOUR_SECONDS","ITEMS_PER_INFO_TABLE_PAGE","TOKEN_BLACKLIST","POOL_AT_BLOCK","block","pools","blockString","addressesString","join","fetchPoolData","block24h","block48h","block7d","block14d","poolAddresses","query","error","gql","infoClient","console","parsePoolData","pairs","reduce","accum","poolData","volumeUSD","reserveUSD","reserve0","reserve1","token0Price","token1Price","id","parseFloat","getName","token","toLowerCase","name","symbol","useState","fetchState","setFetchState","getDeltaTimestamps","t24h","t48h","t7d","t14d","useBlocksFromTimestamps","blocks","useEffect","fetch","formattedPoolData","formattedPoolData24h","formattedPoolData48h","formattedPoolData7d","formattedPoolData14d","formatted","number","now","oneDayAgo","twoDaysAgo","oneWeekAgo","twoWeeksAgo","address","current","oneDay","twoDays","week","twoWeeks","getChangeForPeriod","volumeUSDChange","volumeUSDWeek","volumeUSDChangeWeek","liquidityUSD","liquidityUSDChange","getPercentChange","liquidityToken0","liquidityToken1","getLpFeesAndApr","totalFees24h","totalFees7d","lpFees24h","lpFees7d","lpApr7d","token0","token1","allBlocksAvailable","length","blockError","getBlockSubqueries","timestamps","map","timestamp","blocksQueryConstructor","subqueries","getBlocksFromTimestamps","sortDirection","skipCount","fetchedData","key","multiQuery","BLOCKS_CLIENT","Object","keys","push","split","parseInt","orderBy","valueNow","valueOnePeriodAgo","valueTwoPeriodsAgo","currentPeriodAmount","getAmountChange","previousPeriodAmount","utcCurrentTime","getUnixTime","Date","startOfMinute","subDays","subWeeks","Infinity","getGQLHeaders","endpoint","INFO_CLIENT","origin","process","env","NEXT_PUBLIC_NODE_REAL_HEADER","window","nrHeader","GraphQLClient","headers","SF_HEADER","timeout","STABLESWAP_SUBGRAPH_CLIENT","BIT_QUERY","BIT_QUERY_HEADER","graphQLClient","request","variables","Promise","race","_","reject","setTimeout","Error","setBlocks","setError","timestampsString","JSON","stringify","blocksString","undefined","fetchData","timestampsArray","result","parse","valueBefore","queryConstructor","allFound","skip","client","end","subqueriesSlice","slice","requestWithTimeout"],"sourceRoot":""}