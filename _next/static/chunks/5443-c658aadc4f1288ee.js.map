{"version":3,"file":"static/chunks/5443-c658aadc4f1288ee.js","mappings":"64BAKA,IAAMA,EAAcC,EAAAA,GAAAA,MAAAA,WAAY,C,6BAAZA,C,KACT,Y,IAAGC,EAAK,EAALA,MAAOC,EAAK,EAALA,M,OAAaD,EAAQC,EAAMC,OAAOC,QAAUF,EAAMC,OAAOE,QAS9D,Y,IAAGC,EAAK,EAALA,M,OAAiB,OAALA,QAAK,IAALA,EAAAA,EAAS,WAqB3B,Y,OAAQ,EAALJ,MAAkBC,OAAOI,cAInCC,EAAaC,OAAQ,0BAEdC,GAAQC,EAAAA,EAAAA,OAAK,SAAoB,G,IAC5CC,EAD4C,EAC5CA,MACAC,EAF4C,EAE5CA,YACAC,EAH4C,EAG5CA,YACGC,GAAI,OAJqC,EAWwB,CAVpEH,QACAC,cACAC,gBAeM,GAAQE,EAAAA,EAAAA,MAANC,EAER,OACE,SAAClB,GAAW,kBACNgB,GAAI,CACRH,MAAOA,EACPM,SAAU,SAACC,GAZE,IAACC,GACM,MADNA,EAcHD,EAAME,OAAOT,MAAMU,QAAQ,KAAM,OAblBd,EAAWe,MAAKC,EAAAA,EAAAA,IAAaJ,MACvDP,EAAYO,IAeZK,UAAU,UACVC,MAAOT,EAAE,gBACTU,aAAa,MACbC,YAAY,MAEZC,KAAK,OACLC,QAAQ,sBACRhB,YAAaA,GAAe,MAC5BiB,UAAW,EACXC,UAAW,GACXC,WAAW,cAKjB,O,kjDCnEiBjC,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,KAKJ,Y,OAAW,EAARkC,SAA2B,8BAAgC,kCAL3E,IAOMC,GAAuBnC,EAAAA,EAAAA,IAAOoC,EAAAA,GAAQC,MAAM,CAAEC,QAAS,OAAQC,MAAO,OAAO,Y,6BAAtDvC,C,KAKzB,Y,IAAGwC,EAAQ,EAARA,SAAUtC,EAAK,EAALA,M,OACbsC,IACAC,EAAAA,EAAAA,IAAG,IAEavC,EAAMC,OAAOuC,WACPxC,EAAMC,OAAOwC,WACH,QAAbH,EAAqB,MAAQ,UAI9CI,EAAW5C,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,KAIN,Y,OAAQ,EAALE,MAAkBC,OAAOE,QAKjCwC,EAAa7C,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,KAIG,Y,OAAQ,EAALE,MAAkBC,OAAO2C,iBAG5CC,EAAY/C,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,KAEI,Y,OAAQ,EAALE,MAAkBC,OAAO6C,SAClC,Y,IAAG9C,EAAK,EAALA,MAAOD,EAAK,EAALA,M,OAAYC,EAAM+C,QAAQhD,EAAQ,UAAY,YACpE,Y,QAAW,EAARuC,WAEHC,EAAAA,EAAAA,IAAG,QAKDS,EAAUlD,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,KAIM,Y,OAAQ,EAALE,MAAkBC,OAAO2C,iBA6BnC,SAASK,EAAmB,G,IAoHQC,EAnHjDxC,EADyC,EACzCA,MACAC,EAFyC,EAEzCA,YACAwC,EAHyC,EAGzCA,YAEAC,GALyC,EAIzCC,eAJyC,EAKzCD,OAIAE,GATyC,EAMzCC,qBANyC,EAOzCC,cAPyC,EAQzCC,MARyC,EASzCH,kBACAI,EAVyC,EAUzCA,SAAQ,EAViC,EAWzCC,sBAAAA,OAAqB,IAAG,GAAK,IAXY,EAYzCC,YAAAA,OAAW,IAAG,GAAK,EACnBtB,EAbyC,EAazCA,SACY,GAd6B,EAczCuB,aAdyC,EAezCC,MAAAA,OAAI,IAAG,OAAI,EACXC,EAhByC,EAgBzCA,cACAC,EAjByC,EAiBzCA,GACAC,EAlByC,EAkBzCA,gBACAC,EAnByC,EAmBzCA,gBACAC,EApByC,EAoBzCA,SACApE,EArByC,EAqBzCA,MACAqE,EAtByC,EAsBzCA,SAEM,GAAcC,EAAAA,EAAAA,KAAZC,QACFpB,GAA0BqB,EAAAA,EAAAA,IAA0B,OAAPD,QAAO,IAAPA,EAAAA,OAAWE,EAAmB,OAARd,QAAQ,IAARA,EAAAA,OAAYc,GAC/E,GAAQ1D,EAAAA,EAAAA,MAANC,EAEF0D,EAAQX,EAAOA,EAAKY,gBAAyB,OAARhB,QAAQ,IAARA,OAAAA,EAAAA,EAAUiB,SAAUjB,EAAW,KAQnEkB,GAPcH,IAAQI,EAAAA,EAAAA,IAAUJ,EAAMK,UAEtBC,EAAAA,EAAAA,IACrBX,EAAWV,OAAWc,EACtBQ,OAAOC,UAAUvE,IAAUA,OAAQ8D,IAWpC,QARgCU,EAAAA,EAAAA,IAC/B,SAACC,EAAAA,EAAmB,CAClB7B,iBAAkBA,EAClB8B,iBAAkB1B,EAClB2B,sBAAuBtB,EACvBE,gBAAiBA,EACjBC,gBAAiBA,KAEpB,OAED,OACE,UAACoB,EAAAA,EAAG,CAACC,SAAS,WAAWvB,GAAIA,E,WAC3B,UAACwB,EAAAA,EAAI,CAACC,WAAW,SAASC,eAAe,gB,WACvC,SAACF,EAAAA,EAAI,IA2DJlB,IACC,SAACqB,EAAAA,EAAI,CACHC,SAAUzB,GAAYf,EACtByC,MAAM,aACNC,SAAS,OACTC,MAAO,CAAEC,QAAS,SAAUC,OAAQ,W,UAElCrC,GAAiBF,EACf3C,EAAE,qBAAsB,CAAEmF,QAAkD,QAAzChD,EAAuB,OAAvBA,QAAuB,IAAvBA,OAAAA,EAAAA,EAAyBiD,cAAc,UAAE,IAAzCjD,EAAAA,EAA6CnC,EAAE,aAClF,WAIV,UAAC4B,EAAU,C,WACT,SAACE,EAAS,CAACuD,GAAG,QAAQ9D,SAAUA,EAAUvC,MAAOA,E,UAC/C,UAAC2C,EAAQ,C,WACP,SAACT,EAAoB,CACnBK,SAAUA,EACV+D,UAAU,8BACVrE,WAAY0B,EACZkC,QAAS,WACFjC,GACHiB,K,UAIJ,UAACY,EAAAA,EAAI,CAACC,WAAW,SAASC,eAAe,gB,UACtC5B,GACC,SAACwC,EAAAA,GAAkB,CAACC,UAAWzC,EAAK0C,OAAQC,UAAW3C,EAAK4C,OAAQC,KAAM,GAAIC,QAAM,IAClFlD,GAEF,SAACmD,EAAAA,GAAY,CAACnD,SAAUA,EAAUiD,KAAK,OAAOZ,MAAO,CAAEe,YAAa,SAClE,KACHhD,GACC,UAAC6B,EAAAA,EAAI,CAAC3B,GAAG,OAAO+C,MAAI,E,UACb,OAAJjD,QAAI,IAAJA,OAAAA,EAAAA,EAAM0C,OAAOQ,OAAO,IAAM,OAAJlD,QAAI,IAAJA,OAAAA,EAAAA,EAAM4C,OAAOM,WAGtC,SAACrB,EAAAA,EAAI,CAAC3B,GAAG,OAAO+C,MAAI,E,UAChBrD,GAAYA,EAASsD,QAAUtD,EAASsD,OAAOC,OAAS,GACtD,GAAoCvD,OAAjCA,EAASsD,OAAOE,MAAM,EAAG,GAAG,OAG/B,OAHoCxD,EAASsD,OAAOE,MACpDxD,EAASsD,OAAOC,OAAS,EACzBvD,EAASsD,OAAOC,SAER,OAARvD,QAAQ,IAARA,OAAAA,EAAAA,EAAUsD,SAAWjG,EAAE,wBAG7B4C,IAAyB,SAACwD,EAAAA,EAAe,UAG/C,SAACC,EAAAA,EAAc,CACbrH,MAAOA,EACPoE,SAAUA,EACVkC,UAAU,qBACV3F,MAAOA,EACP2G,OAAQlE,EACRxC,YAAa,SAAC2G,GACZ3G,EAAY2G,WAqCnBnD,IAAY,SAACnB,EAAO,Y,mIChStB,E,2VCLsB,W,OAAA,iBAC3BuE,EACAC,EACAC,EACAC,G,IAGMC,E,iEAEa,OAFbA,EAAQD,EAAaE,EAAAA,EAASF,QAAalD,EAAYkD,OAAalD,EAEvD,C,EAAMqD,OAAOC,SAASC,QAAQ,CAC/CC,OAAQ,oBACRC,OAAQ,CACNtG,KAAM,QACNuG,QAAS,CACPpD,QAASyC,EACTP,OAAQQ,EACRW,SAAUV,EACVE,MAAAA,O,OAKN,MAAO,C,EAbY,iBATQ,I,SDKjBS,GAAAA,EAAAA,EACH,QAAPC,GAAAA,UADUD,EAAAA,EAEN,KAAJE,GAAAA,OAFUF,EAAAA,EAGK,gBAAfG,GAAAA,kB,CAHUH,IAAAA,EAAsB,KAelC,IAAMI,EAAQ,CAEZC,QAASC,EAAAA,EACT,kBAAmBC,EAAAA,EACnBC,MAAOC,EAAAA,EACPC,YAAaC,EAAAA,EACb,eAAgBC,EAAAA,EAChBC,SAAUC,EAAAA,GAGNC,EAAgB,SAACC,EAAqC5B,EAAqBzG,GAC/E,OACEqI,IAAgBhB,EAAuBC,UACtCe,IAAgBhB,EAAuBE,KACpCvH,EAAE,iBACFA,EAAE,wBAAyB,CAAEsI,MAAO7B,MAItC8B,EAAgB,SAACC,EAA+BC,G,IAShD3B,EAGAA,EAGAA,EAGAA,EAjBE4B,GAAY,QAChBC,MAAO,QACHH,GAAyB,CAAEI,GAAIJ,IAErC,GAAIC,GAAQhB,EAAMgB,GAAO,CACvB,IAAMI,EAAOpB,EAAMgB,GACnB,OAAO,SAACI,GAAI,UAAKH,IAEnB,OAAU,OAAN5B,aAAM,IAANA,QAAgB,QAAhBA,EAAAA,OAAQC,gBAAQ,IAAhBD,OAAAA,EAAAA,EAAkBgC,UACb,SAACb,EAAAA,GAAe,UAAKS,KAEpB,OAAN5B,aAAM,IAANA,QAAgB,QAAhBA,EAAAA,OAAQC,gBAAQ,IAAhBD,OAAAA,EAAAA,EAAkBiC,mBACb,SAACnB,EAAAA,GAAkB,UAAKc,KAEvB,OAAN5B,aAAM,IAANA,QAAgB,QAAhBA,EAAAA,OAAQC,gBAAQ,IAAhBD,OAAAA,EAAAA,EAAkBkC,gBACb,SAAChB,EAAAA,GAAe,UAAKU,KAEpB,OAAN5B,aAAM,IAANA,QAAgB,QAAhBA,EAAAA,OAAQC,gBAAQ,IAAhBD,GAAAA,EAAkBmC,YACb,SAACd,EAAAA,GAAY,UAAKO,MA0C7B,EArC0E,Y,IACxElC,EAAY,EAAZA,aACAC,EAAW,EAAXA,YACAC,EAAa,EAAbA,cACAC,EAAS,EAATA,UAAS,IACT0B,YAAAA,OAAW,IAAG,EAAAhB,EAAuBC,QAAO,MAC5CkB,sBAAAA,OAAqB,IAAG,QAAK,EAC1BU,GAAK,UANR1C,eACAC,cACAC,gBACAC,YACA0B,cACAG,0BAGM,GAAQzI,EAAAA,EAAAA,MAANC,EAC2BmJ,GAAAA,EAAAA,EAAAA,MAA3BC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YACbC,ECjDwB,W,IAG7BxC,EACAA,EACCA,EACAA,EACAA,EANF,QAEO,OAANA,aAAM,IAANA,QAAgB,QAAhBA,EAAAA,OAAQC,gBAAQ,IAAhBD,OAAAA,EAAAA,EAAkByC,cACZ,OAANzC,aAAM,IAANA,QAAgB,QAAhBA,EAAAA,OAAQC,gBAAQ,IAAhBD,OAAAA,EAAAA,EAAkBmC,cACX,OAANnC,aAAM,IAANA,QAAgB,QAAhBA,EAAAA,OAAQC,gBAAQ,IAAhBD,OAAAA,EAAAA,EAAkBgC,WACZ,OAANhC,aAAM,IAANA,QAAgB,QAAhBA,EAAAA,OAAQC,gBAAQ,IAAhBD,OAAAA,EAAAA,EAAkBiC,oBACZ,OAANjC,aAAM,IAANA,QAAgB,QAAhBA,EAAAA,OAAQC,gBAAQ,IAAhBD,OAAAA,EAAAA,EAAkBkC,gBD0COQ,GAE3B,OAAIJ,GAAgC,YAAnBA,EAAUX,KAA2B,KAChDW,GAAaA,EAAUK,YAAcJ,GACtCC,GAGH,UAACnI,EAAAA,GAAM,kBACD+H,GAAK,CACTrE,QAAS,W,IAEPuE,EADMxC,EAAQD,EAAaE,EAAAA,EAASF,QAAalD,EAAYkD,OAAalD,EACtD,QAApB2F,EAAAA,EAAUK,kBAAU,IAApBL,GAAAA,EAAAA,KAAAA,EAAuB,CACrBrF,QAASyC,EACTP,OAAQQ,EACRG,MAAAA,EAEAQ,SAAUV,K,UAIb0B,EAAcC,EAAa5B,EAAazG,GACxCuI,EAAcC,EAAgC,OAATY,QAAS,IAATA,OAAAA,EAAAA,EAAWX,UAlBW,M,0QE/DlE,IAAMiB,EAAU3K,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,KAGV4K,GAAU5K,EAAAA,EAAAA,IAAO6K,EAAAA,IAAW,Y,6BAAlB7K,C,KAIV8K,GAAgB9K,EAAAA,EAAAA,IAAO+K,EAAAA,IAAa,Y,6BAApB/K,C,KAItB,SAASgL,EAA2B,G,IAAA,IAAEC,YAC9B,GAAQjK,EAAAA,EAAAA,MAANC,EACR,OACE,UAAC0J,EAAO,C,WACN,SAACG,EAAa,C,UACZ,SAACI,EAAAA,EAAO,OAEV,UAACL,EAAAA,GAAU,CAACM,IAAI,OAAOC,QAAQ,S,WAC7B,SAACvF,EAAAA,EAAI,CAACG,SAAS,O,SAAQ/E,EAAE,+BACzB,SAAC4J,EAAAA,GAAU,CAACM,IAAI,OAAOC,QAAQ,S,UAC7B,SAACvF,EAAAA,EAAI,CAACoB,MAAI,EAACoE,OAAK,EAACC,UAAU,S,SACxBL,OAGL,SAACpF,EAAAA,EAAI,CAACwF,OAAK,EAACtF,MAAM,aAAauF,UAAU,S,SACtCrK,EAAE,mDAON,SAASsK,EAA4B,G,IAC1CC,EAD0C,EAC1CA,UACAC,EAF0C,EAE1CA,QACAC,EAH0C,EAG1CA,KACAC,EAJ0C,EAI1CA,cAOM,GAAQ3K,EAAAA,EAAAA,MAANC,EAEF0D,GAA2BiH,EAAAA,EAAAA,IAAgBD,EAAeF,GAEhE,OACE,SAACd,EAAO,C,UACN,UAACC,EAAO,C,WACN,SAACE,EAAa,C,UACZ,SAACe,EAAAA,EAAW,CAACC,YAAa,GAAKlC,MAAM,OAAO7D,MAAM,eAEpD,UAAC8E,EAAAA,GAAU,CAACM,IAAI,OAAOC,QAAQ,S,WAC7B,SAACvF,EAAAA,EAAI,CAACG,SAAS,O,SAAQ/E,EAAE,2BACxBwK,GAAWC,IACV,SAACK,EAAAA,EAAI,CAACC,UAAQ,EAACX,OAAK,EAACY,MAAMC,EAAAA,EAAAA,GAAoBR,EAAM,cAAeD,G,SACjExK,EAAE,iBAAkB,CACnBkL,MAAMC,EAAAA,EAAAA,IAAoBX,OAI/BE,IACC,SAACU,EAAiB,CAChB/J,QAAQ,WACRgK,GAAG,OACH1C,MAAM,cACNH,sBAAsB,MACtBH,YAAahB,EAAuBG,gBACpChB,aAAc9C,EAAMK,QACpB0C,YAAaiE,EAAczE,OAC3BS,cAAehD,EAAM0D,SACrBT,WAAWjD,EAAAA,EAAAA,GAAAA,EAAiB4H,EAAAA,IAAmB5H,EAAM6H,aAAU9H,KAGnE,SAACtC,EAAAA,EAAM,CAAC0D,QAAS0F,EAAWc,GAAG,O,SAC5BrL,EAAE,mBAQR,SAASwL,EAAyB,G,IACvCC,EADuC,EACvCA,cACAC,EAFuC,EAEvCA,WAKA,OACE,UAAChC,EAAO,C,WACN,SAACnF,EAAAA,EAAG,C,SAAEmH,OACN,SAACnH,EAAAA,EAAG,C,SAAEkH,SAKL,SAASE,EAAwB,G,IACtCC,EADsC,EACtCA,QACArB,EAFsC,EAEtCA,UAKM,GAAQxK,EAAAA,EAAAA,MAANC,EACR,OACE,UAAC0J,EAAO,C,WACN,UAACE,EAAAA,GAAU,CAACO,QAAQ,S,WAClB,SAAC0B,EAAAA,EAAS,CAAC/G,MAAM,UAAU6D,MAAM,UACjC,SAAC/D,EAAAA,EAAI,CAACE,MAAM,UAAUE,MAAO,CAAEqF,UAAW,SAAU1B,MAAO,MAAOmD,UAAW,c,SAC1EF,OAIJrB,GACC,SAAC9F,EAAAA,EAAI,CAACE,eAAe,SAASoH,GAAG,O,UAC/B,SAAC5K,EAAAA,EAAM,CAAC0D,QAAS0F,E,SAAYvK,EAAE,eAE/B,QAeV,IAgCA,EA9BI,Y,IAAGS,EAAK,EAALA,MAAO8J,EAAS,EAATA,UAAWyB,EAAe,EAAfA,gBAAiBC,EAAa,EAAbA,cAAexB,EAAI,EAAJA,KAAMT,EAAW,EAAXA,YAAakC,EAAO,EAAPA,QAASxB,EAAa,EAAbA,cAAkBxB,GAAK,UAArGzI,QAAO8J,YAAWyB,kBAAiBC,gBAAexB,OAAMT,cAAakC,UAASxB,kBAC7E,GAAcpH,EAAAA,EAAAA,KAAZkH,QAEF2B,GAAgBC,EAAAA,EAAAA,cAAY,WAC5BJ,GACFA,IAEO,OAATzB,QAAS,IAATA,GAAAA,MACC,CAACyB,EAAiBzB,IAErB,OAAKC,GAGH,SAAC6B,EAAAA,GAAK,gBAAC5L,MAAOA,EAAO6L,iBAAiB,sBAAyBpD,GAAK,CAAEqB,UAAW4B,E,SAC9EF,GACC,SAAClC,EAA0B,CAACC,YAAaA,IACvCS,GACF,SAACH,EAA2B,CAC1BE,QAASA,EACTC,KAAMA,EACNF,UAAW4B,EACXzB,cAAeA,IAGjBwB,OAde,O,2FClJvB,IAnBgC,WAC9B,IAAM,GAAc5I,EAAAA,EAAAA,KAAZkH,QACF+B,GAAmBC,EAAAA,EAAAA,KAEzB,OAAOC,EAAAA,EAAAA,UAAQ,WACb,GAAKjC,GAAY+B,GAIjB,GAAI/B,IAAYkC,EAAAA,GAAAA,IAChB,IACE,OAAO,IAAIC,EAAAA,kBAAkBnC,EAAwB+B,EAAkBK,EAAAA,IAAgB,GACvF,MAAO5N,GAEP,YADA6N,QAAQ7N,MAAM,4CAA0D,OAAdA,EAAM4M,gBAPhEiB,QAAQ7N,MAAM,yEAUf,CAACwL,EAAS+B,M,sUCLf,ICAO,EDAP,EAZA,SAA2B7I,EAAeoJ,EAAgBC,GACxD,IAAMC,GAAWC,EAAAA,EAAAA,IAAsB,OAALvJ,QAAK,IAALA,OAAAA,EAAAA,EAAOK,SAAS,GAE5CmJ,GAAST,EAAAA,EAAAA,UAAQ,W,MAAM,CAACK,EAAOC,KAAU,CAACD,EAAOC,IACjDI,GAAYC,EAAAA,EAAAA,IAAoBJ,EAAU,YAAaE,GAAQG,OAErE,OAAOZ,EAAAA,EAAAA,UACL,W,OAAO/I,GAASyJ,EAAYG,EAAAA,GAAAA,cAA6B5J,EAAOyJ,EAAUI,iBAAc9J,IACxF,CAACC,EAAOyJ,KCYL,SAASK,EACdC,EACAV,G,IAMcU,EAJR,GAAcC,EAAAA,EAAAA,MAAZnK,QACF,GAAuBoK,EAAAA,EAAAA,KAArBC,iBACF,GAAQ7N,EAAAA,EAAAA,MAANC,EACF,GAAiB6N,EAAAA,EAAAA,KAAfC,WACFpK,GAAuB,OAAf+J,QAAe,IAAfA,GAAyB,QAAzBA,EAAAA,EAAiB9K,gBAAQ,IAAzB8K,OAAAA,EAAAA,EAA2B7J,SAAU6J,EAAgB9K,cAAWc,EACxEsK,EAAmBC,EAAkBtK,EAAc,OAAPH,QAAO,IAAPA,EAAAA,OAAWE,EAAWsJ,GAClEkB,GAAkBC,EAAAA,EAAAA,IAA2B,OAALxK,QAAK,IAALA,OAAAA,EAAAA,EAAOK,QAASgJ,GAGxDoB,GAA+B1B,EAAAA,EAAAA,UAAQ,W,IAEvCgB,EADJ,OAAKA,GAAoBV,GACG,QAAxBU,EAAAA,EAAgB9K,gBAAQ,IAAxB8K,OAAAA,EAAAA,EAA0BW,UAAiBC,EAAcC,SAExDP,EAGEA,EAAiBQ,SAASd,GAC7BQ,EACEI,EAAcG,QACdH,EAAcI,aAChBJ,EAAcC,SAPYD,EAAcK,QAHHL,EAAcK,UAWtD,CAACjB,EAAiBM,EAAkBE,EAAiBlB,IAElD4B,GAAgB1B,EAAAA,EAAAA,IAAsB,OAALvJ,QAAK,IAALA,OAAAA,EAAAA,EAAOK,SACxC6K,GAAiBC,EAAAA,EAAAA,MAEjBC,GAAU1C,EAAAA,EAAAA,cAAY,mB,IA8BtB2C,EACEC,E,iEA9BN,OAAIb,IAAkBE,EAAcI,cAClCX,EAAW9N,EAAE,SAAUA,EAAE,qCACzB6M,QAAQ7N,MAAM,oCACd,C,IAEG0E,EAMAiL,EAMAlB,EAMAV,GAMDgC,GAAW,EACM,C,EAAMJ,EAAcM,YAAYH,QAAQ/B,EAASmC,EAAAA,IAAYC,OAAM,WAGtF,OADAJ,GAAW,EACJJ,EAAcM,YAAYH,QAAQ/B,EAASU,EAAgB2B,SAAS7B,kBAT3EO,EAAW9N,EAAE,SAAUA,EAAE,eACzB6M,QAAQ7N,MAAM,cACd,C,KARA8O,EAAW9N,EAAE,SAAUA,EAAE,8BACzB6M,QAAQ7N,MAAM,6BACd,C,KARA8O,EAAW9N,EAAE,SAAUA,EAAE,mDAAoD,CAAEwG,aAAmB,OAAL9C,QAAK,IAALA,OAAAA,EAAAA,EAAOK,WACpG8I,QAAQ7N,MAAM,yBACd,C,KARA8O,EAAW9N,EAAE,SAAUA,EAAE,aACzB6M,QAAQ7N,MAAM,YACd,C,WA4BF,OANMgQ,EAAe,SAMd,C,EAAApB,EACLe,EACA,UAAS,CACR5B,EAASgC,EAAWtB,EAAgB2B,SAAS7B,WAAa2B,EAAAA,IAC3D,CACEG,UAAUC,EAAAA,EAAAA,IAAmBN,KAG9BO,MAAK,SAACC,GACLZ,EAAeY,EAAU,CACvBC,QAAS,WAA2C,OAAhChC,EAAgB9K,SAASsD,QAC7CyJ,oBAAqB,CAAEtQ,KAAM,mBAAoBuQ,KAAM,CAAE1J,OAAQwH,EAAgB9K,SAASsD,SAC1F2J,SAAU,CAAEpJ,aAAc9C,EAAMK,QAASgJ,QAAAA,GACzCnM,KAAM,eAGTuO,OAAM,SAACnQ,GAMN,MALA6Q,EAAAA,EAAAA,GAAS7Q,GACT6N,QAAQ7N,MAAM,0BAA2BA,GACrB,QAAX,OAALA,QAAK,IAALA,OAAAA,EAAAA,EAAO8Q,OACThC,EAAW9N,EAAE,SAAUhB,EAAM4M,SAEzB5M,aAET,CAACmP,EAAezK,EAAOiL,EAAelB,EAAiBV,EAAS6B,EAAgBhB,EAAkB5N,EAAG8N,IAExG,MAAO,CAACK,EAAeW,GAIlB,SAASiB,EACdC,G,IACAC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAmB,aAAD,EAClBzF,EAAgB,uCAEViD,GAAkBhB,EAAAA,EAAAA,UACtB,W,OAAOuD,GAAQE,EAAAA,EAAAA,IAA+BF,EAAOC,GAAiBE,EAAAA,GAAAA,YAAe1M,IACrF,CAACuM,EAAOC,IAGV,OAAOzC,EAAmBC,EAAiB2C,EAAAA,GAAe5F,IAIrD,SAAS6F,EAA0CC,GACxD,IAE4CC,EAFtCA,GAAgBC,EAAAA,EAAAA,KAEtB,OAAOhD,EAAmB8C,EAAyD,QAAvCC,EAAa,OAAbA,QAAa,IAAbA,OAAAA,EAAAA,EAAeE,iBAAiB1M,eAAO,IAAvCwM,EAAAA,OAA2C9M,I,SA1H7E4K,GAAAA,EAAAA,EACH,QAAPK,GAAAA,UADUL,EAAAA,EAEE,aAAZI,GAAAA,eAFUJ,EAAAA,EAGH,QAAPG,GAAAA,UAHUH,EAAAA,EAIF,SAARC,GAAAA,W,CAJUD,IAAAA,EAAa,M,sKCXlB,SAASV,IACd,IAAM+C,GAAWC,EAAAA,EAAAA,MAUX/C,GAAmBxB,EAAAA,EAAAA,aAAY,W,OACnC,iBACEY,EACA4D,G,IACAC,EACAC,EAaMC,EACAC,EACAC,EAYUA,E,6EAZL,OAhBXJ,EAAoB,EAAH,gCACjBC,EAA2B,EAAH,6BAAG,MAE3BI,EAAAA,EAAAA,IAAc,CACZtQ,KAAM,cACNgL,QAAS,wBAAiC,OAAT8E,GACjCf,KAAM,CACJwB,gBAAiBnE,EAASjJ,QAC1B6M,WAAAA,EACAC,WAAAA,EACAC,UAAAA,KAIEC,EAAiBK,IAAIpE,EAAU4D,GAC/BI,EAAqC,OAATF,QAAS,IAATA,OAAAA,EAAAA,EAAWJ,SAClC,C,EAAMK,EAAAA,WAAAA,GAAAA,EAAAA,EAAAA,GACZF,GAAAA,OAAAA,CACHG,GAA4B,UAAKF,IAAc,kBAAKA,GAAS,CAAEJ,SAAAA,Q,OAgBjE,OAlBMO,EAAK,YAMTC,EAAAA,EAAAA,IAAc,CACZtQ,KAAM,cACNgL,QAAS,qBAA6B,OAARqF,EAAGxG,MACjCkF,KAAM,CACJlF,KAAMwG,EAAGxG,KACT4G,KAAMJ,EAAGI,KACThC,SAAqB,QAAX4B,EAAAA,EAAG5B,gBAAQ,IAAX4B,OAAAA,EAAAA,EAAa1D,WACvB+D,MAAOL,EAAGK,SAKT,C,EAAAL,U,gBApCPjE,EACA4D,G,gCAHiC,GAwCnC,CAACF,IAGH,MAAO,CAAE9C,iBAAAA,K,mGC1CE2D,EAAiB,SAACC,GAE7B,MAAsB,kBAARA,GAAoB,SAAUA,GAAoB,OAAbA,EAAI1B,MAK5CD,EAAW,SAAC7Q,GAQvB6N,QAAQ7N,MAAMA,K,oECEhB,IA5BwC,Y,QAAG4G,KAAAA,OAAI,IAAG,MAAG,EACnB6L,GADmB,EAAEC,WACrBD,EAAAA,EAAAA,WAAS,IAAxBE,GAAeF,EAAe,GAAfA,EAAe,IAO/C,OALAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,iCAAiCvR,KAAKwR,UAAUC,WACxEJ,EAAYE,KACX,KAGD,qB,UACA,SAACG,IAAK,CAACC,IAAI,uBAAuBtJ,MAAO/C,EAAMsM,OAAQtM","sources":["webpack://_N_E/./src/components/CurrencyInputPanel/NumericalInput.tsx","webpack://_N_E/./src/components/CurrencyInputPanel/index.tsx","webpack://_N_E/./src/components/AddToWallet/AddToWalletButton.tsx","webpack://_N_E/./src/utils/wallet.ts","webpack://_N_E/./src/components/TransactionConfirmationModal/index.tsx","webpack://_N_E/./src/hooks/limitOrders/useGelatoLimitOrdersLib.ts","webpack://_N_E/./src/hooks/useTokenAllowance.ts","webpack://_N_E/./src/hooks/useApproveCallback.ts","webpack://_N_E/./src/hooks/useCallWithGasPrice.ts","webpack://_N_E/./src/utils/sentry.ts","webpack://_N_E/./src/views/Swap/Spinner.tsx"],"sourcesContent":["import { memo } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 20px;\n  text-align: ${({ align }) => align ?? 'right'};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex, Box } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\n// import { WrappedTokenInfo } from '@pancakeswap/tokens'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { StablePair } from 'views/AddLiquidity/AddStableLiquidity/hooks/useStableLPDerivedMintInfo'\n\nimport { useBUSDCurrencyAmount } from 'hooks/useBUSDPrice'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { Input as NumericalInput } from './NumericalInput'\nimport { CopyButton } from '../CopyButton'\nimport AddToWalletButton from '../AddToWallet/AddToWalletButton'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: flex-end;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' }) <{ zapStyle?: ZapStyle }>`\n  padding: 1.5rem;\n  background-color: #28263a;\n  border-radius: 24px;\n\n  ${({ zapStyle, theme }) =>\n    zapStyle &&\n    css`\n      padding: 8px;\n      background: ${theme.colors.background};\n      border: 1px solid ${theme.colors.cardBorder};\n      border-radius: ${zapStyle === 'zap' ? '0px' : '8px'} 8px 0px 0px;\n      height: auto;\n    `};\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.4rem;\n`\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n`\nconst Container = styled.div<{ zapStyle?: ZapStyle; error?: boolean }>`\n  border-radius: 28px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme, error }) => theme.shadows[error ? 'warning' : 'inset']};\n  ${({ zapStyle }) =>\n    !!zapStyle &&\n    css`\n      border-radius: 0px 16px 16px 16px;\n    `};\n`\n\nconst Overlay = styled.div`\n  position: absolute;\n  inset: 0;\n  opacity: 0.6;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\ntype ZapStyle = 'noZap' | 'zap'\n\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onInputBlur?: () => void\n  onPercentInput?: (percent: number) => void\n  onMax?: () => void\n  showQuickInputButton?: boolean\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect?: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | StablePair | null\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n  commonBasesType?: string\n  zapStyle?: ZapStyle\n  beforeButton?: React.ReactNode\n  disabled?: boolean\n  error?: boolean\n  showBUSD?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onInputBlur,\n  onPercentInput,\n  onMax,\n  showQuickInputButton = false,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  zapStyle,\n  beforeButton,\n  pair = null, // used for double token logo\n  otherCurrency,\n  id,\n  showCommonBases,\n  commonBasesType,\n  disabled,\n  error,\n  showBUSD,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n\n  const token = pair ? pair.liquidityToken : currency?.isToken ? currency : null\n  const tokenAddress = token ? isAddress(token.address) : null\n\n  const amountInDollar = useBUSDCurrencyAmount(\n    showBUSD ? currency : undefined,\n    Number.isFinite(+value) ? +value : undefined,\n  )\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n      commonBasesType={commonBasesType}\n    />,\n  )\n\n  return (\n    <Box position=\"relative\" id={id}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex>\n          {/* {beforeButton} */}\n          {/* <CurrencySelectButton\n            zapStyle={zapStyle}\n            className=\"open-currency-select-button\"\n            selected={!!currency}\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\" bold>\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\" bold>\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton> */}\n          {/* {token && tokenAddress ? (\n            <Flex style={{ gap: '4px' }} ml=\"4px\" alignItems=\"center\">\n              <CopyButton\n                width=\"16px\"\n                buttonColor=\"textSubtle\"\n                text={tokenAddress}\n                tooltipMessage={t('Token address copied')}\n                tooltipTop={-20}\n                tooltipRight={40}\n                tooltipFontSize={12}\n              />\n              <AddToWalletButton\n                variant=\"text\"\n                p=\"0\"\n                height=\"auto\"\n                width=\"fit-content\"\n                tokenAddress={tokenAddress}\n                tokenSymbol={token.symbol}\n                tokenDecimals={token.decimals}\n                tokenLogo={token instanceof WrappedTokenInfo ? token.logoURI : undefined}\n              />\n            </Flex>\n          ) : null} */}\n        </Flex>\n        {account && (\n          <Text\n            onClick={!disabled && onMax}\n            color=\"textSubtle\"\n            fontSize=\"14px\"\n            style={{ display: 'inline', cursor: 'pointer' }}\n          >\n            {!hideBalance && !!currency\n              ? t('Balance: %balance%', { balance: selectedCurrencyBalance?.toSignificant(6) ?? t('Loading') })\n              : ' -'}\n          </Text>\n        )}\n      </Flex>\n      <InputPanel>\n        <Container as=\"label\" zapStyle={zapStyle} error={error}>\n          <LabelRow>\n            <CurrencySelectButton\n              zapStyle={zapStyle}\n              className=\"open-currency-select-button\"\n              selected={!!currency}\n              onClick={() => {\n                if (!disableCurrencySelect) {\n                  onPresentCurrencyModal()\n                }\n              }}\n            >\n              <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                {pair ? (\n                  <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n                ) : currency ? (\n                  // <></>\n                  <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n                ) : null}\n                {pair ? (\n                  <Text id=\"pair\" bold>\n                    {pair?.token0.symbol}:{pair?.token1.symbol}\n                  </Text>\n                ) : (\n                  <Text id=\"pair\" bold>\n                    {(currency && currency.symbol && currency.symbol.length > 20\n                      ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                      : currency?.symbol) || t('Select a currency')}\n                  </Text>\n                )}\n                {!disableCurrencySelect && <ChevronDownIcon />}\n              </Flex>\n            </CurrencySelectButton>\n            <NumericalInput\n              error={error}\n              disabled={disabled}\n              className=\"token-amount-input\"\n              value={value}\n              onBlur={onInputBlur}\n              onUserInput={(val) => {\n                onUserInput(val)\n              }}\n            />\n          </LabelRow>\n          {/* <InputRow selected={disableCurrencySelect}>\n            {!!currency && showBUSD && Number.isFinite(amountInDollar) && (\n              <Text fontSize=\"12px\" color=\"textSubtle\" mr=\"12px\">\n                ~{formatNumber(amountInDollar)} USD\n              </Text>\n            )}\n            {account && currency && selectedCurrencyBalance?.greaterThan(0) && !disabled && label !== 'To' && (\n              <Flex alignItems=\"right\" justifyContent=\"right\">\n                {showQuickInputButton &&\n                  onPercentInput &&\n                  [25, 50, 75].map((percent) => (\n                    <Button\n                      key={`btn_quickCurrency${percent}`}\n                      onClick={() => {\n                        onPercentInput(percent)\n                      }}\n                      scale=\"xs\"\n                      mr=\"5px\"\n                      variant=\"secondary\"\n                      style={{ textTransform: 'uppercase' }}\n                    >\n                      {percent}%\n                    </Button>\n                  ))}\n                {showMaxButton && (\n                  <Button onClick={onMax} scale=\"xs\" variant=\"secondary\" style={{ textTransform: 'uppercase' }}>\n                    {t('Max')}\n                  </Button>\n                )}\n              </Flex>\n            )}\n          </InputRow> */}\n        </Container>\n        {disabled && <Overlay />}\n      </InputPanel>\n    </Box>\n  )\n}\n","import { useTranslation } from 'contexts/Localization'\nimport {\n  Button,\n  ButtonProps,\n  MetamaskIcon,\n  TrustWalletIcon,\n  CoinbaseWalletIcon,\n  TokenPocketIcon,\n  OperaIcon,\n  BinanceChainIcon,\n} from '@pancakeswap/uikit'\nimport { BAD_SRCS } from 'components/Logo/Logo'\nimport { useAccount } from 'wagmi'\nimport { canRegisterToken } from '../../utils/wallet'\n\nexport enum AddToWalletTextOptions {\n  NO_TEXT,\n  TEXT,\n  TEXT_WITH_ASSET,\n}\n\nexport interface AddToWalletButtonProps {\n  tokenAddress: string\n  tokenSymbol: string\n  tokenDecimals: number\n  tokenLogo: string\n  textOptions?: AddToWalletTextOptions\n  marginTextBetweenLogo?: string\n}\n\nconst Icons = {\n  // TODO: Brave\n  Binance: BinanceChainIcon,\n  'Coinbase Wallet': CoinbaseWalletIcon,\n  Opera: OperaIcon,\n  TokenPocket: TokenPocketIcon,\n  'Trust Wallet': TrustWalletIcon,\n  MetaMask: MetamaskIcon,\n}\n\nconst getWalletText = (textOptions: AddToWalletTextOptions, tokenSymbol: string, t: any) => {\n  return (\n    textOptions !== AddToWalletTextOptions.NO_TEXT &&\n    (textOptions === AddToWalletTextOptions.TEXT\n      ? t('Add to Wallet')\n      : t('Add %asset% to Wallet', { asset: tokenSymbol }))\n  )\n}\n\nconst getWalletIcon = (marginTextBetweenLogo: string, name?: string) => {\n  const iconProps = {\n    width: '16px',\n    ...(marginTextBetweenLogo && { ml: marginTextBetweenLogo }),\n  }\n  if (name && Icons[name]) {\n    const Icon = Icons[name]\n    return <Icon {...iconProps} />\n  }\n  if (window?.ethereum?.isTrust) {\n    return <TrustWalletIcon {...iconProps} />\n  }\n  if (window?.ethereum?.isCoinbaseWallet) {\n    return <CoinbaseWalletIcon {...iconProps} />\n  }\n  if (window?.ethereum?.isTokenPocket) {\n    return <TokenPocketIcon {...iconProps} />\n  }\n  if (window?.ethereum?.isMetaMask) {\n    return <MetamaskIcon {...iconProps} />\n  }\n  return <MetamaskIcon {...iconProps} />\n}\n\nconst AddToWalletButton: React.FC<AddToWalletButtonProps & ButtonProps> = ({\n  tokenAddress,\n  tokenSymbol,\n  tokenDecimals,\n  tokenLogo,\n  textOptions = AddToWalletTextOptions.NO_TEXT,\n  marginTextBetweenLogo = '0px',\n  ...props\n}) => {\n  const { t } = useTranslation()\n  const { connector, isConnected } = useAccount()\n  const isCanRegisterToken = canRegisterToken()\n\n  if (connector && connector.name === 'Binance') return null\n  if (!(connector && connector.watchAsset && isConnected)) return null\n  if (!isCanRegisterToken) return null\n\n  return (\n    <Button\n      {...props}\n      onClick={() => {\n        const image = tokenLogo ? (BAD_SRCS[tokenLogo] ? undefined : tokenLogo) : undefined\n        connector.watchAsset?.({\n          address: tokenAddress,\n          symbol: tokenSymbol,\n          image,\n          // @ts-ignore\n          decimals: tokenDecimals,\n        })\n      }}\n    >\n      {getWalletText(textOptions, tokenSymbol, t)}\n      {getWalletIcon(marginTextBetweenLogo, connector?.name)}\n    </Button>\n  )\n}\n\nexport default AddToWalletButton\n","// Set of helper functions to facilitate wallet setup\nimport { BAD_SRCS } from 'components/Logo/Logo'\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenLogo?: string,\n) => {\n  // better leave this undefined for default image instead of broken image url\n  const image = tokenLogo ? (BAD_SRCS[tokenLogo] ? undefined : tokenLogo) : undefined\n\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n\nexport const canRegisterToken = () =>\n  typeof window !== 'undefined' &&\n  // @ts-ignore\n  !window?.ethereum?.isSafePal &&\n  (window?.ethereum?.isMetaMask ||\n    window?.ethereum?.isTrust ||\n    window?.ethereum?.isCoinbaseWallet ||\n    window?.ethereum?.isTokenPocket)\n","import { ReactElement, useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  Flex,\n  Box,\n  Link,\n  Modal,\n  InjectedModalProps,\n  ModalProps,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { WrappedTokenInfo } from '@pancakeswap/tokens'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBlockExploreLink, getBlockExploreName } from '../../utils'\nimport AddToWalletButton, { AddToWalletTextOptions } from '../AddToWallet/AddToWalletButton'\nimport Spinner from '../../views/Swap/Spinner'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport function TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBlockExploreLink(hash, 'transaction', chainId)}>\n              {t('View on %site%', {\n                site: getBlockExploreName(chainId),\n              })}\n            </Link>\n          )}\n          {currencyToAdd && (\n            <AddToWalletButton\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              marginTextBetweenLogo=\"6px\"\n              textOptions={AddToWalletTextOptions.TEXT_WITH_ASSET}\n              tokenAddress={token.address}\n              tokenSymbol={currencyToAdd.symbol}\n              tokenDecimals={token.decimals}\n              tokenLogo={token instanceof WrappedTokenInfo ? token.logoURI : undefined}\n            />\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({\n  message,\n  onDismiss,\n}: {\n  message: ReactElement | string\n  onDismiss?: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%', wordBreak: 'break-word' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      {onDismiss ? (\n        <Flex justifyContent=\"center\" pt=\"24px\">\n          <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n        </Flex>\n      ) : null}\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<\n  React.PropsWithChildren<InjectedModalProps & ConfirmationModalProps & ModalProps>\n> = ({ title, onDismiss, customOnDismiss, attemptingTxn, hash, pendingText, content, currencyToAdd, ...props }) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss?.()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradientCardHeader\" {...props} onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={handleDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { useMemo } from 'react'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { ChainId as ChainIdType, GelatoLimitOrders } from '@gelatonetwork/limit-orders-lib'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { GELATO_HANDLER } from 'config/constants/exchange'\nimport { useProviderOrSigner } from 'hooks/useProviderOrSigner'\n\nconst useGelatoLimitOrdersLib = (): GelatoLimitOrders | undefined => {\n  const { chainId } = useActiveWeb3React()\n  const providerOrSigner = useProviderOrSigner()\n\n  return useMemo(() => {\n    if (!chainId || !providerOrSigner) {\n      console.error('Could not instantiate GelatoLimitOrders: missing chainId or library')\n      return undefined\n    }\n    if (chainId !== ChainId.BSC) return undefined\n    try {\n      return new GelatoLimitOrders(chainId as ChainIdType, providerOrSigner, GELATO_HANDLER, false)\n    } catch (error: any) {\n      console.error(`Could not instantiate GelatoLimitOrders: ${error.message}`)\n      return undefined\n    }\n  }, [chainId, providerOrSigner])\n}\n\nexport default useGelatoLimitOrdersLib\n","import { Token, CurrencyAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? CurrencyAmount.fromRawAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { useTranslation } from 'contexts/Localization'\nimport { Currency, CurrencyAmount, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useToast } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { ROUTER_ADDRESS } from 'config/constants/exchange'\nimport { useCallback, useMemo } from 'react'\nimport { logError } from 'utils/sentry'\nimport { Field } from '../state/swap/actions'\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin } from '../utils'\nimport { computeSlippageAdjustedAmounts } from '../utils/exchange'\nimport useGelatoLimitOrdersLib from './limitOrders/useGelatoLimitOrdersLib'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\nimport { useTokenContract } from './useContract'\nimport useTokenAllowance from './useTokenAllowance'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount<Currency>,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency?.isNative) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      toastError(t('Error'), t('Approve was called unnecessarily'))\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      toastError(t('Error'), t('No token'))\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      toastError(t('Error'), t('Cannot find contract of the token %tokenAddress%', { tokenAddress: token?.address }))\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      toastError(t('Error'), t('Missing amount to approve'))\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      toastError(t('Error'), t('No spender'))\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString())\n    })\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.quotient.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          translatableSummary: { text: 'Approve %symbol%', data: { symbol: amountToApprove.currency.symbol } },\n          approval: { tokenAddress: token.address, spender },\n          type: 'approve',\n        })\n      })\n      .catch((error: any) => {\n        logError(error)\n        console.error('Failed to approve token', error)\n        if (error?.code !== 4001) {\n          toastError(t('Error'), error.message)\n        }\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice, t, toastError])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(\n  trade?: Trade<Currency, Currency, TradeType>,\n  allowedSlippage = 0,\n  chainId?: number,\n) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS[chainId])\n}\n\n// Wraps useApproveCallback in the context of a Gelato Limit Orders\nexport function useApproveCallbackFromInputCurrencyAmount(currencyAmountIn: CurrencyAmount<Currency> | undefined) {\n  const gelatoLibrary = useGelatoLimitOrdersLib()\n\n  return useApproveCallback(currencyAmountIn, gelatoLibrary?.erc20OrderRouter.address ?? undefined)\n}\n","import { useCallback } from 'react'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Contract, CallOverrides } from '@ethersproject/contracts'\nimport { useGasPrice } from 'state/user/hooks'\nimport get from 'lodash/get'\nimport { addBreadcrumb } from '@sentry/nextjs'\n\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  /**\n   * Perform a contract call with a gas price returned from useGasPrice\n   * @param contract Used to perform the call\n   * @param methodName The name of the method called\n   * @param methodArgs An array of arguments to pass to the method\n   * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n   * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n   */\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<TransactionResponse> => {\n      addBreadcrumb({\n        type: 'Transaction',\n        message: `Call with gas price: ${gasPrice}`,\n        data: {\n          contractAddress: contract.address,\n          methodName,\n          methodArgs,\n          overrides,\n        },\n      })\n\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      if (tx) {\n        addBreadcrumb({\n          type: 'Transaction',\n          message: `Transaction sent: ${tx.hash}`,\n          data: {\n            hash: tx.hash,\n            from: tx.from,\n            gasLimit: tx.gasLimit?.toString(),\n            nonce: tx.nonce,\n          },\n        })\n      }\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import { captureException } from '@sentry/nextjs'\n\nconst assignError = (maybeError: any) => {\n  if (typeof maybeError === 'string') {\n    return new Error(maybeError)\n  }\n  if (typeof maybeError === 'object') {\n    const error = new Error(maybeError?.message ?? String(maybeError))\n    if (maybeError?.stack) {\n      error.stack = maybeError.stack\n    }\n    if (maybeError?.code) {\n      error.name = maybeError.code\n    }\n    return error\n  }\n  return maybeError\n}\n\nexport const isUserRejected = (err) => {\n  // provider user rejected error code\n  return typeof err === 'object' && 'code' in err && err.code === 4001\n}\n\nconst ENABLED_LOG = false\n\nexport const logError = (error: Error | unknown) => {\n  if (ENABLED_LOG) {\n    if (error instanceof Error) {\n      captureException(error)\n    } else {\n      captureException(assignError(error), error)\n    }\n  }\n  console.error(error)\n}\n","import { useEffect, useState } from 'react';\nimport Image from 'next/image';\n\ninterface SpinnerProps {\n  size?: number;\n  pulseLogo?: boolean;\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({ size = 160, pulseLogo = false }) => {\n  const [isSafari, setIsSafari] = useState(false);\n\n  useEffect(() => {\n    const isSafariBrowser = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    setIsSafari(isSafariBrowser);\n  }, []);\n\n  return (\n    <>\n    <Image src=\"/images/safemars.png\" width={size} height={size} />\n      {/* {isSafari ? (\n        <Image src=\"/images/safemars.png\" width={size} height={size} />\n      ) : (\n        <video autoPlay loop muted playsInline width={size} height={size}>\n          <source src=\"/images/home/lunar-bunny/logo.webm?v=2\" type=\"video/webm\" />\n          <Image src=\"/images/safemars.png\" width={size} height={size} />\n        </video>\n      )} */}\n      {/* {pulseLogo && (\n        <div>\n          <Image src=\"/images/safemars.png\" width={size} height={size} />\n        </div>\n      )} */}\n    </>\n  );\n};\n\nexport default Spinner;\n"],"names":["StyledInput","styled","error","theme","colors","failure","text","align","textSubtle","inputRegex","RegExp","Input","memo","value","onUserInput","placeholder","rest","useTranslation","t","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","title","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","selected","CurrencySelectButton","Button","attrs","variant","scale","zapStyle","css","background","cardBorder","LabelRow","InputPanel","backgroundAlt","Container","input","shadows","Overlay","CurrencyInputPanel","selectedCurrencyBalance","onInputBlur","onMax","onPercentInput","onCurrencySelect","showQuickInputButton","showMaxButton","label","currency","disableCurrencySelect","hideBalance","beforeButton","pair","otherCurrency","id","showCommonBases","commonBasesType","disabled","showBUSD","useActiveWeb3React","account","useCurrencyBalance","undefined","token","liquidityToken","isToken","onPresentCurrencyModal","isAddress","address","useBUSDCurrencyAmount","Number","isFinite","useModal","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","Box","position","Flex","alignItems","justifyContent","Text","onClick","color","fontSize","style","display","cursor","balance","toSignificant","as","className","DoubleCurrencyLogo","currency0","token0","currency1","token1","size","margin","CurrencyLogo","marginRight","bold","symbol","length","slice","ChevronDownIcon","NumericalInput","onBlur","val","tokenAddress","tokenSymbol","tokenDecimals","tokenLogo","image","BAD_SRCS","window","ethereum","request","method","params","options","decimals","AddToWalletTextOptions","NO_TEXT","TEXT","TEXT_WITH_ASSET","Icons","Binance","BinanceChainIcon","CoinbaseWalletIcon","Opera","OperaIcon","TokenPocket","TokenPocketIcon","TrustWalletIcon","MetaMask","MetamaskIcon","getWalletText","textOptions","asset","getWalletIcon","marginTextBetweenLogo","name","iconProps","width","ml","Icon","isTrust","isCoinbaseWallet","isTokenPocket","isMetaMask","props","useAccount","connector","isConnected","isCanRegisterToken","isSafePal","canRegisterToken","watchAsset","Wrapper","Section","AutoColumn","ConfirmedIcon","ColumnCenter","ConfirmationPendingContent","pendingText","Spinner","gap","justify","small","textAlign","TransactionSubmittedContent","onDismiss","chainId","hash","currencyToAdd","wrappedCurrency","ArrowUpIcon","strokeWidth","Link","external","href","getBlockExploreLink","site","getBlockExploreName","AddToWalletButton","mt","WrappedTokenInfo","logoURI","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","ErrorIcon","wordBreak","pt","customOnDismiss","attemptingTxn","content","handleDismiss","useCallback","Modal","headerBackground","providerOrSigner","useProviderOrSigner","useMemo","ChainId","GelatoLimitOrders","GELATO_HANDLER","console","owner","spender","contract","useTokenContract","inputs","allowance","useSingleCallResult","result","CurrencyAmount","toString","useApproveCallback","amountToApprove","useWeb3React","useCallWithGasPrice","callWithGasPrice","useToast","toastError","currentAllowance","useTokenAllowance","pendingApproval","useHasPendingApproval","approvalState","isNative","ApprovalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","tokenContract","addTransaction","useTransactionAdder","approve","useExact","estimatedGas","estimateGas","MaxUint256","catch","quotient","gasLimit","calculateGasMargin","then","response","summary","translatableSummary","data","approval","logError","code","useApproveCallbackFromTrade","trade","allowedSlippage","computeSlippageAdjustedAmounts","Field","ROUTER_ADDRESS","useApproveCallbackFromInputCurrencyAmount","currencyAmountIn","gelatoLibrary","useGelatoLimitOrdersLib","erc20OrderRouter","gasPrice","useGasPrice","methodName","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","tx","addBreadcrumb","contractAddress","get","from","nonce","isUserRejected","err","useState","pulseLogo","setIsSafari","useEffect","isSafariBrowser","navigator","userAgent","Image","src","height"],"sourceRoot":""}