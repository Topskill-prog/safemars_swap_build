{"version":3,"file":"static/chunks/5008.6d6ec0219f80b56d.js","mappings":"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","sources":["webpack://_N_E/./packages/ui/tokens/colors.ts","webpack://_N_E/./src/views/Info/components/InfoCharts/CandleChart/index.tsx"],"sourcesContent":["export const baseColors = {\n  white: 'white',\n  failure: '#ED4B9E',\n  failure33: '#ED4B9E33',\n  primary: '#ba17ba',\n  primary0f: '#1FC7D40f',\n  primary3D: '#1FC7D43D',\n  primaryBright: '#53DEE9',\n  primaryDark: '#0098A1',\n  success: '#31D0AA',\n  success19: '#31D0AA19',\n  warning: '#FFB237',\n  warning2D: '#ED4B9E2D',\n  warning33: '#ED4B9E33',\n}\n\nexport const additionalColors = {\n  binance: '#F0B90B',\n  overlay: '#452a7a',\n  gold: '#FFC700',\n  silver: '#B2B2B2',\n  bronze: '#E7974D',\n}\n\nexport const lightColors = {\n  ...baseColors,\n  ...additionalColors,\n  secondary: '#3675D9',\n  secondary80: '#3675D980',\n  background: '#FAF9FA',\n  backgroundDisabled: '#E9EAEB',\n  backgroundAlt: '#FFFFFF',\n  backgroundAlt2: 'rgba(255, 255, 255, 0.7)',\n  cardBorder: '#E7E3EB',\n  contrast: '#191326',\n  dropdown: '#F6F6F6',\n  dropdownDeep: '#EEEEEE',\n  invertedContrast: '#FFFFFF',\n  input: '#eeeaf4',\n  inputSecondary: '#d7caec',\n  tertiary: '#EFF4F5',\n  text: '#280D5F',\n  text99: '#280D5F99',\n  textDisabled: '#BDC2C4',\n  textSubtle: '#7A6EAA',\n  disabled: '#E9EAEB',\n  gradientBubblegum: 'linear-gradient(139.73deg, #E5FDFF 0%, #F3EFFF 100%)',\n  gradientInverseBubblegum: 'linear-gradient(139.73deg, #F3EFFF 0%, #E5FDFF 100%)',\n  gradientCardHeader: 'linear-gradient(139.73deg, #E5FDFF 0%, #F3EFFF 100%)',\n  gradientBlue: 'linear-gradient(180deg, #A7E8F1 0%, #94E1F2 100%)',\n  gradientViolet: 'linear-gradient(180deg, #E2C9FB 0%, #CDB8FA 100%)',\n  gradientVioletAlt: 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)',\n  gradientGold: 'linear-gradient(180deg, #FFD800 0%, #FDAB32 100%)',\n  gradients: {\n    bubblegum: \"linear-gradient(139.73deg, #E5FDFF 0%, #F3EFFF 100%)\",\n    inverseBubblegum: \"linear-gradient(139.73deg, #F3EFFF 0%, #E5FDFF 100%)\",\n    cardHeader: \"linear-gradient(139.73deg, #E5FDFF 0%, #F3EFFF 100%)\",\n    blue: \"linear-gradient(180deg, #A7E8F1 0%, #94E1F2 100%)\",\n    violet: \"linear-gradient(180deg, #E2C9FB 0%, #CDB8FA 100%)\",\n    violetAlt: \"linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)\",\n    gold: \"linear-gradient(180deg, #FFD800 0%, #FDAB32 100%)\",\n  },\n}\n\nexport const darkColors = {\n  ...baseColors,\n  ...additionalColors,\n  secondary: '#fb7c01',\n  secondary80: '#fb7c0180',\n  background: '#08060B',\n  backgroundDisabled: '#2f3751',\n  backgroundAlt: '#202639',\n  backgroundAlt2: '#161b2b',\n  cardBorder: '#2f395b',\n  contrast: '#FFFFFF',\n  dropdown: '#1E1D20',\n  dropdownDeep: '#100C18',\n  invertedContrast: '#191326',\n  input: '#2b3450',\n  inputSecondary: '#262130',\n  primaryDark: '#0098A1',\n  tertiary: '#353547',\n  text: '#F4EEFF',\n  text99: '#F4EEFF99',\n  textDisabled: '#666171',\n  textSubtle: '#B8ADD2',\n  disabled: '#524B63',\n  gradientBubblegum: 'linear-gradient(112.1deg, rgb(32, 38, 57) 11.4%, rgb(63, 76, 119) 70.2%)',\n  gradientInverseBubblegum: 'linear-gradient(139.73deg, #3D2A54 0%, #313D5C 100%)',\n  gradientCardHeader: 'inear-gradient(112.1deg, rgb(32, 38, 57) 11.4%, rgb(63, 76, 119) 70.2%)',\n  gradientBlue: 'linear-gradient(180deg, #00707F 0%, #19778C 100%)',\n  gradientViolet: 'linear-gradient(180deg, #6C4999 0%, #6D4DB2 100%)',\n  gradientVioletAlt: 'linear-gradient(180deg, #434575 0%, #66578D 100%)',\n  gradientGold: 'linear-gradient(180deg, #FFD800 0%, #FDAB32 100%)',\n  \n  gradients: {\n    bubblegum: \"inear-gradient(112.1deg, rgb(32, 38, 57) 11.4%, rgb(63, 76, 119) 70.2%)\",\n    inverseBubblegum: \"linear-gradient(139.73deg, #3D2A54 0%, #313D5C 100%)\",\n    cardHeader: \"inear-gradient(112.1deg, rgb(32, 38, 57) 11.4%, rgb(63, 76, 119) 70.2%)\",\n    blue: \"linear-gradient(180deg, #00707F 0%, #19778C 100%)\",\n    violet: \"linear-gradient(180deg, #6C4999 0%, #6D4DB2 100%)\",\n    violetAlt: \"linear-gradient(180deg, #434575 0%, #66578D 100%)\",\n    gold: \"linear-gradient(180deg, #FFD800 0%, #FDAB32 100%)\",\n  },\n}\n","import { useRef, useState, useEffect, useCallback, Dispatch, SetStateAction } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { createChart, IChartApi } from 'lightweight-charts'\nimport { format } from 'date-fns'\nimport { baseColors } from '@pancakeswap/ui/tokens/colors'\nimport useTheme from 'hooks/useTheme'\nimport { CandleChartLoader } from 'views/Info/components/ChartLoaders'\n\nconst CANDLE_CHART_HEIGHT = 250\n\nexport type LineChartProps = {\n  data: any[]\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setLabel?: Dispatch<SetStateAction<string | undefined>> // used for value label on hover\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst CandleChart = ({ data, setValue, setLabel, ...rest }: LineChartProps) => {\n  const { theme } = useTheme()\n  const {\n    currentLanguage: { locale },\n  } = useTranslation()\n  const chartRef = useRef<HTMLDivElement>(null)\n  const [chartCreated, setChart] = useState<IChartApi | undefined>()\n\n  const handleResize = useCallback(() => {\n    if (chartCreated && chartRef?.current?.parentElement) {\n      chartCreated.resize(chartRef.current.parentElement.clientWidth - 32, CANDLE_CHART_HEIGHT)\n      chartCreated.timeScale().fitContent()\n      chartCreated.timeScale().scrollToPosition(0, false)\n    }\n  }, [chartCreated, chartRef])\n\n  // add event listener for resize\n  const isClient = typeof window === 'object'\n  useEffect(() => {\n    if (!isClient) {\n      return null\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, chartRef, handleResize]) // Empty array ensures that effect is only run on mount and unmount\n\n  // if chart not instantiated in canvas, create it\n  useEffect(() => {\n    if (!chartCreated && data && !!chartRef?.current?.parentElement) {\n      const chart = createChart(chartRef.current, {\n        height: CANDLE_CHART_HEIGHT,\n        width: chartRef.current.parentElement.clientWidth - 32,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: theme.colors.textSubtle,\n          fontFamily: 'Kanit, sans-serif',\n          fontSize: 12,\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: 0.1,\n            bottom: 0.1,\n          },\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n          secondsVisible: true,\n          tickMarkFormatter: (unixTime: number) => {\n            return format(unixTime * 1000, 'MM/dd h:mm a')\n          },\n        },\n        watermark: {\n          visible: false,\n        },\n        grid: {\n          horzLines: {\n            visible: false,\n          },\n          vertLines: {\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: false,\n            labelVisible: false,\n          },\n          mode: 1,\n          vertLine: {\n            visible: true,\n            labelVisible: false,\n            style: 3,\n            width: 1,\n            color: theme.colors.textSubtle,\n            labelBackgroundColor: theme.colors.primary,\n          },\n        },\n      })\n\n      chart.timeScale().fitContent()\n      setChart(chart)\n    }\n  }, [chartCreated, data, setValue, theme])\n\n  useEffect(() => {\n    if (chartCreated && data) {\n      const series = chartCreated.addCandlestickSeries({\n        upColor: baseColors.success,\n        downColor: baseColors.failure,\n        borderDownColor: baseColors.failure,\n        borderUpColor: baseColors.success,\n        wickDownColor: baseColors.failure,\n        wickUpColor: baseColors.success,\n      })\n\n      series.setData(data)\n\n      // update the title when hovering on the chart\n      chartCreated.subscribeCrosshairMove((param) => {\n        if (\n          chartRef?.current &&\n          (param === undefined ||\n            param.time === undefined ||\n            (param && param.point && param.point.x < 0) ||\n            (param && param.point && param.point.x > chartRef.current.clientWidth) ||\n            (param && param.point && param.point.y < 0) ||\n            (param && param.point && param.point.y > CANDLE_CHART_HEIGHT))\n        ) {\n          // reset values\n          if (setValue) setValue(undefined)\n          if (setLabel) setLabel(undefined)\n        } else if (series && param) {\n          const timestamp = param.time as number\n          const now = new Date(timestamp * 1000)\n          const time = `${now.toLocaleString(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: '2-digit',\n            timeZone: 'UTC',\n          })} (UTC)`\n          const parsed = param.seriesPrices.get(series) as { open: number } | undefined\n          if (setValue) setValue(parsed?.open)\n          if (setLabel) setLabel(time)\n        }\n      })\n    }\n  }, [locale, chartCreated, data, setValue, setLabel, theme])\n\n  return (\n    <>\n      {!chartCreated && <CandleChartLoader />}\n      <div ref={chartRef} id=\"candle-chart\" {...rest} />\n    </>\n  )\n}\n\nexport default CandleChart\n"],"names":["baseColors","white","failure","failure33","primary","primary0f","primary3D","primaryBright","primaryDark","success","success19","warning","warning2D","warning33","additionalColors","binance","overlay","gold","silver","bronze","secondary","secondary80","background","backgroundDisabled","backgroundAlt","backgroundAlt2","cardBorder","contrast","dropdown","dropdownDeep","invertedContrast","input","inputSecondary","tertiary","text","text99","textDisabled","textSubtle","disabled","gradientBubblegum","gradientInverseBubblegum","gradientCardHeader","gradientBlue","gradientViolet","gradientVioletAlt","gradientGold","gradients","bubblegum","inverseBubblegum","cardHeader","blue","violet","violetAlt","data","setValue","setLabel","rest","useTheme","theme","currentLanguage","useTranslation","locale","chartRef","useRef","useState","chartCreated","setChart","handleResize","useCallback","current","parentElement","resize","clientWidth","timeScale","fitContent","scrollToPosition","useEffect","window","addEventListener","removeEventListener","chart","createChart","height","width","layout","backgroundColor","textColor","colors","fontFamily","fontSize","rightPriceScale","scaleMargins","top","bottom","borderVisible","secondsVisible","tickMarkFormatter","unixTime","format","watermark","visible","grid","horzLines","vertLines","crosshair","horzLine","labelVisible","mode","vertLine","style","color","labelBackgroundColor","series","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","subscribeCrosshairMove","param","undefined","time","point","x","y","timestamp","now","Date","toLocaleString","year","month","day","hour","minute","timeZone","parsed","seriesPrices","get","open","CandleChartLoader","div","ref","id"],"sourceRoot":""}