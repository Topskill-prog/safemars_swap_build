{"version":3,"file":"static/chunks/2381-5479b19de5aaa8b4.js","mappings":"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","sources":["webpack://_N_E/./src/components/Modal/ModalInput.tsx","webpack://_N_E/./src/components/Modal/Spacer.tsx","webpack://_N_E/./src/components/Modal/ModalActions.tsx","webpack://_N_E/./src/components/PageHeader/PageHeader.tsx","webpack://_N_E/./src/components/RoiCalculatorModal/useRoiCalculatorReducer.ts","webpack://_N_E/./src/components/RoiCalculatorModal/AnimatedArrow.tsx","webpack://_N_E/./src/components/RoiCalculatorModal/RoiCalculatorFooter.tsx","webpack://_N_E/./src/components/RoiCalculatorModal/RoiCard.tsx","webpack://_N_E/./src/components/RoiCalculatorModal/index.tsx","webpack://_N_E/./src/components/Select/Select.tsx","webpack://_N_E/./src/components/TokenImage/index.tsx","webpack://_N_E/./src/utils/compoundApyHelpers.ts","webpack://_N_E/./src/utils/getLiquidityUrlPathParts.ts","webpack://_N_E/./src/views/Farms/components/DepositModal.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/ApyButton.tsx","webpack://_N_E/./src/components/ExpandableSectionButton/ExpandableSectionButton.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/DetailsSection.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/CardHeading.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/StakeAction.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/CardActionsContainer.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/FarmCard.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/HarvestAction.tsx","webpack://_N_E/./src/views/Farms/components/StakedLP.tsx","webpack://_N_E/./src/views/Farms/components/WithdrawModal.tsx","webpack://_N_E/./src/views/Farms/hooks/useZapInToken.ts","webpack://_N_E/./src/views/Farms/components/ZapModal.tsx","webpack://_N_E/./src/views/Farms/hooks/useApproveFarm2.ts","webpack://_N_E/./src/views/Farms/components/getDisplayApr.ts","webpack://_N_E/./src/views/Farms/hooks/useApproveFarm.ts","webpack://_N_E/./src/views/Farms/hooks/useHarvestFarm.ts","webpack://_N_E/./src/views/Farms/hooks/useStakeFarms.ts","webpack://_N_E/./src/views/Farms/hooks/useUnstakeFarms.ts","webpack://_N_E/./src/hooks/useIntersectionObserver.ts","webpack://_N_E/./src/utils/latinise.ts","webpack://_N_E/./src/components/SearchInput/SearchInput.tsx","webpack://_N_E/./src/components/Loading.tsx","webpack://_N_E/./src/components/ToggleView/ToggleView.tsx","webpack://_N_E/./src/hooks/useDelayedUnmount.ts","webpack://_N_E/./src/components/Tags.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Apr.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Farm.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Details.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Multiplier.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Liquidity.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Actions/styles.ts","webpack://_N_E/./src/views/Farms/components/FarmTable/Actions/HarvestAction.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Actions/StakedAction.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Fees.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Actions/ActionPanel.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/CellLayout.tsx","webpack://_N_E/./src/views/Farms/components/types.ts","webpack://_N_E/./src/views/Farms/components/FarmTable/Earned.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Row.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/FarmTable.tsx","webpack://_N_E/./src/views/Farms/components/FarmTabButtons/index.tsx","webpack://_N_E/./src/views/Farms/components/CardValue.tsx","webpack://_N_E/./src/views/Farms/Farms.tsx","webpack://_N_E/./src/views/Farms/index.tsx"],"sourcesContent":["import styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { parseUnits } from '@ethersproject/units'\nimport { formatBigNumber } from 'utils/formatBalance'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst RoiInputContainer = styled(Box)`\nposition: relative;\n& > input {\n  padding-left: 28px;\n  max-width: 70%;\n}\n&:before {\n  position: absolute;\n  content: '$';\n  color: ${({ theme }) => theme.colors.textSubtle};\n  left: 26px;\n  top: 12px;\n}\n`\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${({ theme, isWarning }) => (isWarning ? theme.colors.warning : theme.shadows.inset)};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  border: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<React.PropsWithChildren<ModalInputProps>> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n\n    const balanceUnits = parseUnits(balance, decimals)\n    return formatBigNumber(balanceUnits, decimals, decimals)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n            <StyledInput\n              pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n              inputMode=\"decimal\"\n              step=\"any\"\n              min=\"0\"\n              onChange={onChange}\n              placeholder=\"0\"\n              value={value}\n            />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport const ZapModalInput: React.FC<React.PropsWithChildren<ModalInputProps>> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n\n    const balanceUnits = parseUnits(balance, decimals)\n    return formatBigNumber(balanceUnits, decimals, decimals)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n        <RoiInputContainer>\n            <StyledInput\n              pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n              inputMode=\"decimal\"\n              step=\"any\"\n              min=\"0\"\n              onChange={onChange}\n              placeholder=\"0\"\n              value={value}\n            />\n        </RoiInputContainer>\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<React.PropsWithChildren<SpacerProps>> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: string\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: string\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size};\n  width: ${(props) => props.size};\n`\n\nexport default Spacer\n","import { Children } from 'react'\nimport styled from 'styled-components'\nimport Spacer from './Spacer'\n\nconst ModalActions: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const l = Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]} 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradientBubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n  position: relative;\n`\n\nconst PageHeader: React.FC<React.PropsWithChildren<PageHeaderProps>> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport merge from 'lodash/merge'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst defaultState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  {\n    stakingTokenPrice,\n    earningTokenPrice,\n    autoCompoundFrequency,\n  }: {\n    stakingTokenPrice: number\n    earningTokenPrice: number\n    autoCompoundFrequency: number\n  },\n  initialState,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, merge(defaultState, initialState))\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: +amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n    dispatch,\n  }\n}\n\nexport default useRoiCalculatorReducer\n\nexport function DefaultCompoundStrategy({\n  state,\n  apr,\n  earningTokenPrice,\n  stakingTokenPrice,\n  performanceFee,\n  dispatch,\n}) {\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [\n    principalAsUSD,\n    apr,\n    stakingDuration,\n    earningTokenPrice,\n    performanceFee,\n    compounding,\n    compoundingFrequency,\n    mode,\n    dispatch,\n  ])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [\n    stakingDuration,\n    apr,\n    compounding,\n    compoundingFrequency,\n    mode,\n    roiUSD,\n    stakingTokenPrice,\n    performanceFee,\n    dispatch,\n  ])\n\n  return null\n}\n","import { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary3D}`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<React.PropsWithChildren<AnimatedArrowProps>> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import { useState, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr?: number\n  apy?: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<React.PropsWithChildren<RoiCalculatorFooterProps>> = ({\n  isFarm,\n  apr,\n  apy,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of DEP rewards each farm receives, as a proportion of the DEP produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 DEP per block, a 40x farm would receive 40 DEP per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const lpRewardsAPR = useMemo(\n    () =>\n      isFarm\n        ? Number.isFinite(Number(displayApr)) && Number.isFinite(apr)\n          ? Math.max(Number(displayApr) - apr, 0).toFixed(2)\n          : null\n        : null,\n    [isFarm, displayApr, apr],\n  )\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            {!Number.isFinite(apy) ? (\n              <Text color=\"textSubtle\" small>\n                *{isFarm ? t('Base APR (DEP yield only)') : t('APR')}\n              </Text>\n            ) : (\n              <Text color=\"textSubtle\" small>\n                {t('APY')}\n              </Text>\n            )}\n            <Text small textAlign=\"right\">\n              {(apy ?? apr).toFixed(2)}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  *{t('LP Rewards APR')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {lpRewardsAPR === '0' ? '-' : lpRewardsAPR}%\n                </Text>\n              </>\n            )}\n            {!Number.isFinite(apy) && (\n              <Text color=\"textSubtle\" small>\n                {t('APY (%compoundTimes%x daily compound)', {\n                  compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n                })}\n              </Text>\n            )}\n            {!Number.isFinite(apy) && (\n              <Text small textAlign=\"right\">\n                {(\n                  getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100\n                ).toFixed(2)}\n                %\n              </Text>\n            )}\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\" lineHeight={1.1}>\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n           \n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\" lineHeight={1.1}>\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          {/* <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex> */}\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import { useRef, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  min-height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradientBubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<React.PropsWithChildren<RoiCardProps>> = ({\n  earningTokenSymbol,\n  calculatorState,\n  setTargetRoi,\n  setCalculatorMode,\n}) => {\n  const [expectedRoi, setExpectedRoi] = useState('')\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n    setExpectedRoi(\n      roiUSD.toLocaleString('en', {\n        minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n        maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n      }),\n    )\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.validity.valid) {\n      const roiAsString = event.target.value.replace(/,/g, '.')\n      setTargetRoi(roiAsString)\n      setExpectedRoi(roiAsString)\n    }\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"^[0-9]+[.,]?[0-9]*$\"\n                  scale=\"sm\"\n                  value={expectedRoi}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol}\n          <Text\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            ml=\"3px\"\n            display=\"inline-block\"\n            maxWidth=\"100%\"\n            style={{ lineBreak: 'anywhere' }}\n          >\n            ({roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n            %)\n          </Text>\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import { useTranslation } from 'contexts/Localization'\nimport {\n  BalanceInput,\n  Button,\n  ButtonMenu,\n  ButtonMenuItem,\n  Checkbox,\n  Flex,\n  HelpIcon,\n  Modal,\n  Text,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useEffect, useMemo, useRef } from 'react'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport AnimatedArrow from './AnimatedArrow'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, {\n  CalculatorMode,\n  DefaultCompoundStrategy,\n  EditingCurrency,\n} from './useRoiCalculatorReducer'\n\nexport interface RoiCalculatorModalProps {\n  pid?: number\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr?: number\n  apy?: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialState?: any\n  initialValue?: string\n  strategy?: any\n  header?: React.ReactNode\n  bCakeCalculatorSlot?: (stakingTokenBalance: string) => React.ReactNode\n}\n\nconst StyledModal = styled(Modal)`\n  & > :nth-child(2) {\n    padding: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 380px;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<React.PropsWithChildren<RoiCalculatorModalProps>> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  apy,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'SOMI',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n  initialState,\n  strategy,\n  header,\n  children,\n  bCakeCalculatorSlot,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n    dispatch,\n  } = useRoiCalculatorReducer({ stakingTokenPrice, earningTokenPrice, autoCompoundFrequency }, initialState)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  const DURATION = useMemo(() => [t('1D'), t('7D'), t('30D'), t('1Y'), t('5Y')], [t])\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradientCardHeader\"\n    >\n      <ScrollableContainer>\n        {strategy ? (\n          strategy(state, dispatch)\n        ) : (\n          <DefaultCompoundStrategy\n            apr={apy ?? apr}\n            dispatch={dispatch}\n            state={state}\n            earningTokenPrice={earningTokenPrice}\n            performanceFee={performanceFee}\n            stakingTokenPrice={stakingTokenPrice}\n          />\n        )}\n        {header}\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            inputProps={{\n              scale: 'sm',\n            }}\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={\n                !Number.isFinite(stakingTokenPrice) ||\n                !stakingTokenBalance.isFinite() ||\n                stakingTokenBalance.lte(0) ||\n                !account\n              }\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              style={{ textTransform: 'uppercase' }}\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance')}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          {children || (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Staked for')}\n              </Text>\n              <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n                {DURATION.map((duration) => (\n                  <ButtonMenuItem key={duration} variant=\"tertiary\">\n                    {duration}\n                  </ButtonMenuItem>\n                ))}\n              </FullWidthButtonMenu>\n            </>\n          )}\n          {bCakeCalculatorSlot && bCakeCalculatorSlot(principalAsToken)}\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        apy={apy}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n  placeHolderText?: string\n  defaultOptionIndex?: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<React.PropsWithChildren<SelectProps>> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  placeHolderText,\n  ...props\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [optionSelected, setOptionSelected] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n    setOptionSelected(true)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (defaultOptionIndex) {\n      setSelectedOptionIndex(defaultOptionIndex - 1)\n      setOptionSelected(true)\n    }\n  }, [defaultOptionIndex])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text color={!optionSelected && placeHolderText ? 'text' : undefined}>\n          {!optionSelected && placeHolderText ? placeHolderText : options[selectedOptionIndex].label}\n        </Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList>\n          {options.map((option, index) =>\n            placeHolderText || index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport { Token, ChainId } from '@pancakeswap/sdk'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = token?.isNative ? token.wrapped.address : token.address\n  \n  return `/images/tokens/${address}.png`\n}\n\nexport const TokenPairImage: React.FC<React.PropsWithChildren<TokenPairImageProps>> = ({\n  primaryToken,\n  secondaryToken,\n  ...props\n}) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<React.PropsWithChildren<TokenImageProps>> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { bscTokens } from '@pancakeswap/tokens'\n\nconst getLiquidityUrlPathParts = ({\n  quoteTokenAddress,\n  tokenAddress,\n}: {\n  quoteTokenAddress: string\n  tokenAddress: string\n}): string => {\n  const wBnbAddress = bscTokens.wbnb.address\n  const firstPart = !quoteTokenAddress || quoteTokenAddress === wBnbAddress ? 'BNB' : quoteTokenAddress\n  const secondPart = !tokenAddress || tokenAddress === wBnbAddress ? 'BNB' : tokenAddress\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport BigNumber from 'bignumber.js'\nimport { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Flex,\n  Text,\n  Button,\n  Modal,\n  LinkExternal,\n  CalculateIcon,\n  IconButton,\n  Skeleton,\n  AutoRenewIcon,\n} from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, formatNumber } from 'utils/formatBalance'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\ninterface DepositModalProps {\n  max: BigNumber\n  stakedBalance: BigNumber\n  multiplier?: string\n  lpPrice: BigNumber\n  lpLabel?: string\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  stakedBalance,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  multiplier,\n  displayApr,\n  lpPrice,\n  lpLabel = '',\n  apr,\n  addLiquidityUrl,\n  cakePrice,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const lpTokensToStake = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const usdToStake = lpTokensToStake.times(lpPrice)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !lpTokensToStake.isNaN() ? usdToStake.toNumber() : 0,\n    apr,\n    earningTokenPrice: cakePrice.toNumber(),\n  })\n\n  const annualRoi = cakePrice.times(interestBreakdown[3])\n  const annualRoiAsNumber = annualRoi.toNumber()\n  const formattedAnnualRoi = formatNumber(annualRoiAsNumber, annualRoi.gt(10000) ? 0 : 2, annualRoi.gt(10000) ? 0 : 2)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n        stakingTokenBalance={stakedBalance.plus(max)}\n        stakingTokenSymbol={tokenName}\n        stakingTokenPrice={lpPrice.toNumber()}\n        earningTokenPrice={cakePrice.toNumber()}\n        apr={apr}\n        multiplier={multiplier}\n        displayApr={displayApr}\n        linkHref={addLiquidityUrl}\n        isFarm\n        initialValue={val}\n        onBack={() => setShowRoiCalculator(false)}\n      />\n    )\n  }\n\n  return (\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      {/* <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Text mr=\"8px\" color=\"textSubtle\">\n          {t('Annual ROI at current rates')}:\n        </Text>\n        {Number.isFinite(annualRoiAsNumber) ? (\n          <AnnualRoiContainer\n            alignItems=\"center\"\n            onClick={() => {\n              setShowRoiCalculator(true)\n            }}\n          >\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        ) : (\n          <Skeleton width={60} />\n        )}\n      </Flex> */}\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        {pendingTx ? (\n          <Button width=\"100%\" isLoading={pendingTx} endIcon={<AutoRenewIcon spin color=\"currentColor\" />}>\n            {t('Confirming')}\n          </Button>\n        ) : (\n          <Button\n            width=\"100%\"\n            disabled={!lpTokensToStake.isFinite() || lpTokensToStake.eq(0) || lpTokensToStake.gt(fullBalanceNumber)}\n            onClick={async () => {\n              setPendingTx(true)\n              await onConfirm(val)\n              onDismiss?.()\n              setPendingTx(false)\n            }}\n          >\n            {t('Confirm')}\n          </Button>\n        )}\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('Get %symbol%', { symbol: tokenName })}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Flex, IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nexport interface ApyButtonProps {\n  variant: 'text' | 'text-and-button'\n  pid: number\n  lpSymbol: string\n  lpLabel?: string\n  multiplier: string\n  cakePrice?: BigNumber\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({\n  variant,\n  pid,\n  lpLabel,\n  lpSymbol,\n  cakePrice,\n  apr,\n  multiplier,\n  displayApr,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const { tokenBalance, stakedBalance } = useFarmUser(pid)\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      stakingTokenBalance={stakedBalance.plus(tokenBalance)}\n      stakingTokenSymbol={lpSymbol}\n      stakingTokenPrice={lpPrice.toNumber()}\n      earningTokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      multiplier={multiplier}\n      displayApr={displayApr}\n      linkHref={addLiquidityUrl}\n      isFarm\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <ApyLabelContainer alignItems=\"center\" onClick={handleClickButton}>\n      {displayApr}%\n      {variant === 'text-and-button' && (\n        <IconButton variant=\"text\" scale=\"sm\" ml=\"4px\">\n          <CalculateIcon width=\"18px\" />\n        </IconButton>\n      )}\n    </ApyLabelContainer>\n  )\n}\n\nexport default ApyButton\n","import styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCallback } from 'react'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<React.PropsWithChildren<ExpandableSectionButtonProps>> = ({\n  onClick,\n  expanded = false,\n}) => {\n  const { t } = useTranslation()\n  const handleOnClick = useCallback(() => onClick?.(), [onClick])\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={handleOnClick}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nexport default ExpandableSectionButton\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, Skeleton, Button, useModal } from '@pancakeswap/uikit'\nimport DepositModal from '../DepositModal'\nimport ZapModal from '../ZapModal'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n  isCommunity?: boolean\n  auctionHostingEndDate?: string\n  farm?: any\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  infoAddress,\n  farm,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n  isCommunity,\n  auctionHostingEndDate,\n}) => {\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const [onPresentDeposit] = useModal(\n\n    <ZapModal\n      token0Decimals={farm.token.decimals}\n      token1Decimals={farm.quoteToken.decimals}\n      token0Name={farm.token.symbol}\n      token1Name={farm.quoteToken.symbol}\n      token0Address={farm.token.address}\n      token1Address={farm.quoteToken.address}\n      lpAddress={farm.lpAddress}\n      lpTokenName={lpLabel}\n      addLiquidityUrl={addLiquidityUrl}\n      pid={farm.pid}\n    />,\n  )\n\n  return (\n    <Wrapper>\n      {isCommunity && auctionHostingEndDate && (\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Auction Hosting Ends')}:</Text>\n          <Text>\n            {new Date(auctionHostingEndDate).toLocaleString(locale, {\n              month: 'short',\n              day: 'numeric',\n              year: 'numeric',\n            })}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n      )}\n      <StyledLinkExternal href={bscScanAddress}>{t('View Contract')}</StyledLinkExternal>\n      {!removed && (\n        <Button\n          width=\"100%\"\n          marginTop=\"8px\"\n          disabled={!account}\n          onClick={onPresentDeposit}\n        >\n          Zap in\n        </Button>\n      )}\n      {/* <StyledLinkExternal href={infoAddress}>{t('See Pair Info')}</StyledLinkExternal> */}\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Skeleton } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport { FarmAuctionTag, CoreTag } from 'components/Tags'\nimport { TokenPairImage } from 'components/TokenImage'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  token: Token\n  quoteToken: Token\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, isCommunityFarm, token, quoteToken }) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {/* {isCommunityFarm ? <FarmAuctionTag /> : <CoreTag />} */}\n          {multiplier ? (\n            <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n          ) : (\n            <Skeleton ml=\"4px\" width={42} height={28} />\n          )}\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useWeb3React } from '@pancakeswap/wagmi'\nimport styled from 'styled-components'\nimport { Button, Flex, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useRouter } from 'next/router'\nimport { useLpTokenPrice, useFarmUser, usePriceCakeBusd } from 'state/farms/hooks'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport useUnstakeFarms from '../../hooks/useUnstakeFarms'\nimport useStakeFarms from '../../hooks/useStakeFarms'\nimport { FarmWithStakedValue } from '../types'\nimport StakedLP from '../StakedLP'\n\ninterface FarmCardActionsProps extends FarmWithStakedValue {\n  lpLabel?: string\n  addLiquidityUrl?: string\n  displayApr?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  quoteToken,\n  token,\n  lpSymbol,\n  pid,\n  multiplier,\n  apr,\n  displayApr,\n  addLiquidityUrl,\n  lpLabel,\n  lpTotalSupply,\n  tokenAmountTotal,\n  quoteTokenAmountTotal,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const { tokenBalance, stakedBalance } = useFarmUser(pid)\n  const cakePrice = usePriceCakeBusd()\n  const router = useRouter()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError } = useCatchTxError()\n\n  const handleStake = async (amount: string) => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onStake(amount)\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Staked')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your funds have been staked in the farm')}\n        </ToastDescriptionWithTx>,\n      )\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n    }\n  }\n\n  const handleUnstake = async (amount: string) => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onUnstake(amount)\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Unstaked')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your earnings have also been harvested to your wallet')}\n        </ToastDescriptionWithTx>,\n      )\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n    }\n  }\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => router.pathname.includes(item))}\n      >\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => router.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <StakedLP\n        stakedBalance={stakedBalance}\n        lpSymbol={lpSymbol}\n        quoteTokenSymbol={quoteToken.symbol}\n        tokenSymbol={token.symbol}\n        lpTotalSupply={lpTotalSupply}\n        tokenAmountTotal={tokenAmountTotal}\n        quoteTokenAmountTotal={quoteTokenAmountTotal}\n      />\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { Button, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport styled from 'styled-components'\nimport { getAddress } from 'utils/addressHelpers'\nimport { FarmWithStakedValue } from '../types'\nimport useApproveFarm from '../../hooks/useApproveFarm'\nimport HarvestAction from './HarvestAction'\nimport StakeAction from './StakeAction'\nimport { ChainId } from '@pancakeswap/sdk'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  lpLabel?: string\n  displayApr?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, lpLabel, displayApr }) => {\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, loading: pendingTx } = useCatchTxError()\n  const { pid, lpAddress } = farm\n  const { allowance, earnings } = farm.userData || {}\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const dispatch = useAppDispatch()\n\n  const lpContract = useERC20(lpAddress)\n\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onApprove()\n    })\n    if (receipt?.status) {\n      toastSuccess(t('Contract Enabled'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid], chainId: ChainId.SOMNIA  }))\n    }\n  }, [onApprove, dispatch, account, pid, t, toastSuccess, fetchWithCatchTxError])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction {...farm} lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} displayApr={displayApr} />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={pendingTx} onClick={handleApprove}>\n        {t('Enable Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          SOMI\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {farm.lpSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import { useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components';\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit'\nimport { getBlockExploreLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport { FarmWithStakedValue } from '../types'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nconst rotate = keyframes`\n  100% {\n    transform: rotate(1turn);\n  }\n`;\n\nconst ConicBorder = styled.div`\n  position: relative;\n  z-index: 0;\n  margin: 10px;\n  border-radius: 30px;\n  overflow: hidden;\n  padding: 4px !important;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -2;\n    left: -50%;\n    top: -50%;\n    width: 200%;\n    height: 200%;\n    background-color: #1a232a;\n    background-repeat: no:\n    repeat: no-repeat;\n    background-position: 0 0;\n    background-image: conic-gradient(transparent, rgba(255, 165, 0, 1), transparent 20%);\n    animation: ${rotate} 2s linear infinite;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    left: 6px;\n    top: 6px;\n    width: calc(100% - 12px);\n    height: calc(100% - 12px);\n    border-radius: 5px;\n  }\n`;\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n  max-width: 100%;\n  margin: 0 0 24px 0;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 350px;\n    margin: 3px 2px 2px;\n  }\n`\n\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n  const totalValueFormatted =\n    farm.liquidity && farm.liquidity.gt(0)\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 3 })}`\n      : ''\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('SOMI')\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  // const lpAddress = farm.lpAddress\n  // const isPromotedFarm = farm.token.symbol === 'DEP'\n\n  const toggleExpandableSection = useCallback(() => {\n    setShowExpandableSection((prev) => !prev)\n  }, [])\n\n  return (\n    <>\n    {removed !== true ?\n      <ConicBorder>\n        <StyledCard isActive={false}>\n          <FarmCardInnerContainer>\n            <CardHeading\n              lpLabel={lpLabel}\n              multiplier={farm.multiplier}\n              isCommunityFarm={farm.isCommunity}\n              token={farm.token}\n              quoteToken={farm.quoteToken}\n            />\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n              <Text>{t('APR')}:</Text>\n              <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n                {farm.apr ? (\n                  <ApyButton\n                    variant=\"text-and-button\"\n                    pid={farm.pid}\n                    lpSymbol={farm.lpSymbol}\n                    multiplier={farm.multiplier}\n                    lpLabel={lpLabel}\n                    addLiquidityUrl={addLiquidityUrl}\n                    cakePrice={cakePrice}\n                    apr={farm.apr}\n                    displayApr={displayApr}\n                  />\n                ) : (\n                  <Skeleton height={24} width={80} />\n                )}\n              </Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text>{t('Earn')}:</Text>\n              <Text bold>{earnLabel}</Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text>{t('Deposit Fee')}:</Text>\n              <Text bold>{farm.depositFeeBP/100}%</Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text>{t('Withdraw Fee')}:</Text>\n              <Text bold>{farm.withdrawFeeBP/100}%</Text>\n            </Flex>\n            <CardActionsContainer\n              farm={farm}\n              lpLabel={lpLabel}\n              account={account}\n              addLiquidityUrl={addLiquidityUrl}\n              displayApr={displayApr}\n            />\n          </FarmCardInnerContainer>\n\n          <ExpandingWrapper>\n            <ExpandableSectionButton onClick={toggleExpandableSection} expanded={showExpandableSection} />\n            {showExpandableSection && (\n              <DetailsSection\n                farm={farm}\n                removed={removed}\n                bscScanAddress={getBlockExploreLink(farm.lpAddress, 'address')}\n                infoAddress={`/info/pools/${farm.lpAddress}`}\n                totalValueFormatted={totalValueFormatted}\n                lpLabel={lpLabel}\n                addLiquidityUrl={addLiquidityUrl}\n                isCommunity={farm.isCommunity}\n                auctionHostingEndDate={farm.auctionHostingEndDate}\n              />\n            )}\n          </ExpandingWrapper>\n        </StyledCard>\n      </ConicBorder>\n    : <StyledCard isActive={false}>\n          <FarmCardInnerContainer>\n            <CardHeading\n              lpLabel={lpLabel}\n              multiplier={farm.multiplier}\n              isCommunityFarm={farm.isCommunity}\n              token={farm.token}\n              quoteToken={farm.quoteToken}\n            />\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n              <Text>{t('APR')}:</Text>\n              <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n                {farm.apr ? (\n                  <ApyButton\n                    variant=\"text-and-button\"\n                    pid={farm.pid}\n                    lpSymbol={farm.lpSymbol}\n                    multiplier={farm.multiplier}\n                    lpLabel={lpLabel}\n                    addLiquidityUrl={addLiquidityUrl}\n                    cakePrice={cakePrice}\n                    apr={farm.apr}\n                    displayApr={displayApr}\n                  />\n                ) : (\n                  <Skeleton height={24} width={80} />\n                )}\n              </Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text>{t('Earn')}:</Text>\n              <Text bold>{earnLabel}</Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text>{t('Deposit Fee')}:</Text>\n              <Text bold>{farm.depositFeeBP/100}%</Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text>{t('Withdraw Fee')}:</Text>\n              <Text bold>{farm.withdrawFeeBP/100}%</Text>\n            </Flex>\n            <CardActionsContainer\n              farm={farm}\n              lpLabel={lpLabel}\n              account={account}\n              addLiquidityUrl={addLiquidityUrl}\n              displayApr={displayApr}\n            />\n          </FarmCardInnerContainer>\n\n          <ExpandingWrapper>\n            <ExpandableSectionButton onClick={toggleExpandableSection} expanded={showExpandableSection} />\n            {showExpandableSection && (\n              <DetailsSection\n                farm={farm}\n                removed={removed}\n                bscScanAddress={getBlockExploreLink(farm.lpAddress, 'address')}\n                infoAddress={`/info/pools/${farm.lpAddress}`}\n                totalValueFormatted={totalValueFormatted}\n                lpLabel={lpLabel}\n                addLiquidityUrl={addLiquidityUrl}\n                isCommunity={farm.isCommunity}\n                auctionHostingEndDate={farm.auctionHostingEndDate}\n              />\n            )}\n          </ExpandingWrapper>\n        </StyledCard>\n    }\n    </>\n  )\n}\n\nexport default FarmCard\n","import { Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useToast from 'hooks/useToast'\nimport useCatchTxError from 'hooks/useCatchTxError'\n\nimport { ChainId } from '@pancakeswap/sdk'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport useHarvestFarm from '../../hooks/useHarvestFarm'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\n\nconst codeFromStorage = getLanguageCodeFromLS()\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nexport const getNumberForMobile = (number) => {\n  return new Intl.NumberFormat(codeFromStorage, {\n      notation: 'compact',\n      compactDisplay: 'long',\n      maximumSignificantDigits: 2,\n     }).format(number)\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, loading: pendingTx } = useCatchTxError()\n  const { t } = useTranslation()\n  const { onReward } = useHarvestFarm(pid)\n  const cakePrice = usePriceCakeBusd()\n  const dispatch = useAppDispatch()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings, 9) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      {(pid === 0 || pid === 1) && (\n        <>\n          <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n            <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{getNumberForMobile(displayBalance)}</Heading>\n            {earningsBusd > 0 && (\n              <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n            )}\n          </Flex>\n          <Button\n            disabled={rawEarningsBalance.eq(0) || pendingTx}\n            onClick={async () => {\n              const receipt = await fetchWithCatchTxError(() => {\n                return onReward()\n              })\n              if (receipt?.status) {\n                toastSuccess(\n                  `${t('Harvested')}!`,\n                  <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n                    {t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'SOMI' })}\n                  </ToastDescriptionWithTx>,\n                )\n                dispatch(fetchFarmUserDataAsync({ account, pids: [pid], chainId: ChainId.SOMNIA }))\n              }\n            }}\n          >\n            {pendingTx ? t('Harvesting') : t('Harvest')}\n          </Button>\n        </>\n      )}\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import { Flex, Heading } from '@pancakeswap/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { useMemo } from 'react'\nimport { useLpTokenPrice } from 'state/farms/hooks'\nimport { formatLpBalance, getBalanceNumber } from 'utils/formatBalance'\n\ninterface StackedLPProps {\n  stakedBalance: BigNumber\n  lpSymbol: string\n  tokenSymbol: string\n  quoteTokenSymbol: string\n  lpTotalSupply: BigNumber\n  tokenAmountTotal: BigNumber\n  quoteTokenAmountTotal: BigNumber\n}\n\nconst StakedLP: React.FunctionComponent<StackedLPProps> = ({\n  stakedBalance,\n  lpSymbol,\n  quoteTokenSymbol,\n  tokenSymbol,\n  lpTotalSupply,\n  tokenAmountTotal,\n  quoteTokenAmountTotal,\n}) => {\n  const lpPrice = useLpTokenPrice(lpSymbol)\n\n  const displayBalance = useMemo(() => {\n    return formatLpBalance(stakedBalance)\n  }, [stakedBalance])\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n      <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {stakedBalance.gt(0) && lpPrice.gt(0) && (\n        <>\n          <Balance\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            decimals={2}\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n          <Flex style={{ gap: '4px' }}>\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={stakedBalance.div(lpTotalSupply).times(tokenAmountTotal).toNumber()}\n              unit={` ${tokenSymbol}`}\n            />\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={stakedBalance.div(lpTotalSupply).times(quoteTokenAmountTotal).toNumber()}\n              unit={` ${quoteTokenSymbol}`}\n            />\n          </Flex>\n        </>\n      )}\n    </Flex>\n  )\n}\n\nexport default StakedLP\n","import BigNumber from 'bignumber.js'\nimport { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\n      Unstake<br/>{fullBalance}<br/>{tokenName}\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        {pendingTx ? (\n          <Button width=\"100%\" isLoading={pendingTx} endIcon={<AutoRenewIcon spin color=\"currentColor\" />}>\n            {t('Confirming')}\n          </Button>\n        ) : (\n          <Button\n            width=\"100%\"\n            onClick={async () => {\n              setPendingTx(true)\n              await onConfirm(val)\n              onDismiss?.()\n              setPendingTx(false)\n            }}\n          >\n            {t('Confirm')}\n          </Button>\n        )}\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import { useCallback } from 'react'\nimport { zapTokenIn } from 'utils/calls'\nimport { useZapContract } from 'hooks/useContract'\n\nconst useZapInToken = () => {\n  const zapContract = useZapContract()\n\n  const handleZap = useCallback(\n    async (\n      from: string, \n      amount: string,\n      to: string,\n      routerAddr: string,\n      recipient: string\n      ) => {\n      return zapTokenIn(zapContract, from, amount, to, routerAddr, recipient)\n    },\n    [zapContract],\n  )\n\n  return { onZap: handleZap }\n}\n\nexport default useZapInToken\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport BigNumber from 'bignumber.js'\nimport { useCallback, useEffect, useState } from 'react'\nimport {\n  Button,\n  Modal,\n  AutoRenewIcon,\n  Heading,\n  Text,\n  Box\n} from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, formatNumber } from 'utils/formatBalance'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport Select from 'components/Select/Select'\nimport { FetchStatus } from 'config/constants/types'\nimport { useERC20, useZapContract } from 'hooks/useContract'\nimport { ROUTER_ADDRESS } from 'config/constants/exchange'\nimport { formatEther, parseEther, parseUnits } from '@ethersproject/units'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport useTokenAllowance from 'hooks/useTokenAllowance'\nimport { useApproveCallback } from 'hooks/useApproveCallback'\nimport multicall from 'utils/multicall'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getZapAddress } from 'utils/addressHelpers'\nimport erc20ABI from 'config/abi/erc20.json'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useToast from 'hooks/useToast'\nimport useZapInToken from '../hooks/useZapInToken'\nimport styled from 'styled-components'\nimport { ZapModalInput } from 'components/Modal/ModalInput'\nimport { useApproveZap } from 'views/Farms/hooks/useApproveFarm2'\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\ninterface ZapModalProps {\n  token0Decimals?: number\n  token1Decimals?: number\n  token0Name?: string;\n  token1Name?: string;\n  token0Address?: string,\n  token1Address?: string,\n  lpAddress?: string,\n  lpTokenName?: string,\n  addLiquidityUrl: string,\n  pid: number,\n  onDismiss?: () => void\n}\n\nconst ZapModal: React.FC<ZapModalProps> = ({\n  token0Decimals = 18,\n  token1Decimals = 18,\n  token0Name = '',\n  token1Name = '',\n  token0Address = '0xA1077a294dDE1B09bB078844df40758a5D0f9a27',\n  token1Address = '0xefD766cCb38EaF1dfd701853BFCe31359239F305',\n  lpAddress = '0xefD766cCb38EaF1dfd701853BFCe31359239F305',\n  lpTokenName = 'DEP-WPLS',\n  addLiquidityUrl,\n  pid,\n  onDismiss\n}) => {\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { account, chainId } = useActiveWeb3React()\n  const [pendingTx, setPendingTx] = useState(false)\n  const zapContract = useZapContract(true)\n  const { onZap } = useZapInToken()\n  const { balance: token0Balance, fetchStatus: token0BalanceStatus } = useTokenBalance(token0Address)\n  const { balance: token1Balance, fetchStatus: token1BalanceStatus } = useTokenBalance(token1Address)\n  const { fetchWithCatchTxError, loading: _pendingTx } = useCatchTxError()\n  const [allowances, setAllowances] = useState(['0', '0'])\n  const [val, setVal] = useState('');\n  const lpTokensToStake = new BigNumber(val)\n  const [zappingToken, setZappingToken] = useState(token0Name);\n  const [estimate, setEstimate] = useState({ token0: '0', token1: '0' });\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(token0Balance);\n  const [zappingTokenDecimals, setZappingTokenDecimals] = useState(18)\n\n  // eslint-disable-next-line consistent-return\n  const getTokenAddress = (_tokenName) => {\n    if(_tokenName === token0Name) {\n      if(token0Name === \"DAI\")\n       { return token1Address}\n\n      return token0Address\n      \n    }\n  }\n  const getAllowance = useCallback(async () => {\n    const calls = [token0Address, token1Address].map((address) => {\n      const lpContractAddress = address\n      return { address: lpContractAddress, name: 'allowance', params: [account, getZapAddress()] }\n    })\n    const rawLpAllowances = await multicall<BigNumber[]>(erc20ABI, calls, chainId)\n    const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n      return new BigNumber(lpBalance).toJSON()\n    })\n\n    setAllowances(parsedLpAllowances)\n    return parsedLpAllowances\n  }, [account, chainId, token0Address, token1Address])\n  useEffect(() => {\n    setZappingTokenBalance(token0Balance)\n    setZappingTokenDecimals(token0Decimals)\n    setZappingToken(token0Name);\n    getAllowance()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token0BalanceStatus])\n\n  function isNumeric(n: any) {\n    // eslint-disable-next-line no-restricted-globals\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  const handleChangeAsset = async (event: any) => {\n    const { value } = event;\n    const _tokenBalance = value === token0Name ? token0Balance : token1Balance;\n    const _tokenDecimals = value === token0Name ? token0Decimals : token1Decimals\n    setZappingToken(value);\n    setZappingTokenBalance(_tokenBalance);\n    setZappingTokenDecimals(_tokenDecimals)\n\n    const estimateZap = await zapContract?.estimateZapInToken(\n      value === token0Name ? token0Address : token1Address,\n      lpAddress,\n      ROUTER_ADDRESS[ChainId.SOMNIA],\n      parseUnits(val, _tokenDecimals)\n    );\n    if(pid === 3 || pid === 7) {\n      setEstimate({ token0: estimateZap[1].toString(), token1: estimateZap[0].toString() });\n    } else \n    setEstimate({ token0: estimateZap[0].toString(), token1: estimateZap[1].toString() });\n  };\n\n  const handleChange = async (e: any) => {\n    if (e.target.value === '' || e.target.value === '0' || e.target.value === 0) {\n      setVal(e.target.value);\n      setEstimate({ token0: '0', token1: '0' });\n      return;\n    }\n    if (!isNumeric(e.target.value)) return;\n    setVal(e.target.value);\n    const estimateZap = await zapContract?.estimateZapInToken(\n      zappingToken === token0Name ? token0Address : token1Address,\n      lpAddress,\n      ROUTER_ADDRESS[ChainId.SOMNIA],\n      parseUnits(e.target.value, zappingTokenDecimals)\n    );\n    if(pid === 3 || pid === 7) {\n      setEstimate({ token0: estimateZap[1].toString(), token1: estimateZap[0].toString() });\n    } else \n    setEstimate({ token0: estimateZap[0].toString(), token1: estimateZap[1].toString() });\n  };\n\n  const handleSelectMax = async () => {\n    setVal(String(getFullDisplayBalance(zappingTokenBalance, zappingTokenDecimals)));\n    const estimateZap = await zapContract?.estimateZapInToken(\n      zappingToken === token0Name ? token0Address : token1Address,\n      lpAddress,\n      ROUTER_ADDRESS[ChainId.SOMNIA],\n      parseUnits(String(getFullDisplayBalance(zappingTokenBalance, zappingTokenDecimals, 3)), zappingToken === token0Name ? token0Decimals : token1Decimals)\n    );\n\n    if(pid === 3 || pid === 7) {\n      setEstimate({ token0: estimateZap[1].toString(), token1: estimateZap[0].toString() });\n    } else \n    setEstimate({ token0: estimateZap[0].toString(), token1: estimateZap[1].toString() });\n  };\n\n  const handleZap = async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onZap(zappingToken === token0Name ? token0Address : token1Address, parseUnits(val, zappingTokenDecimals).toString(), lpAddress, ROUTER_ADDRESS[ChainId.SOMNIA], account)\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Staked')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your funds have been staked in the farm')}\n        </ToastDescriptionWithTx>,\n      )\n    }\n  }\n\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  const token0Contract = useERC20(token0Address)\n  const token1Contract = useERC20(token1Address)\n  const { onApprove } = useApproveZap(zappingToken === token0Name ? token0Contract : token1Contract)\n\n  const handleApprove = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onApprove()\n    })\n    if (receipt?.status) {\n      getAllowance()\n      toastSuccess(t('Token Enabled to Zap contract'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n    }\n  }, [fetchWithCatchTxError, onApprove, getAllowance, toastSuccess, t])\n\n\n  return (\n    <Modal title={`Zap in ${lpTokenName}`} onDismiss={onDismiss}>\n      <Select\n        style={{ marginBottom: \"10px\" }}\n        options={[\n          {\n            label: token0Name,\n            value: token0Name,\n          },\n          {\n            label: token1Name,\n            value: token1Name,\n          },\n\n        ]}\n        onOptionChange={handleChangeAsset}\n      />\n      <RoiInputContainer>\n\n        <ZapModalInput\n          value={val}\n          onSelectMax={handleSelectMax}\n          onChange={handleChange}\n          max={token0BalanceStatus === FetchStatus.Fetched ? String(getFullDisplayBalance(zappingTokenBalance, zappingTokenDecimals, 3)) : '0'}\n          symbol={zappingToken}\n          addLiquidityUrl={addLiquidityUrl}\n          inputTitle={t('Zap in')}\n          decimals={zappingTokenDecimals}\n        />\n      </RoiInputContainer>\n\n      <Heading mt=\"24px\" scale='sm'>\n        Zap Estimate:\n      </Heading>\n      <Text color='textSubtle'>\n        {`(${getFullDisplayBalance(new BigNumber(estimate.token0), token0Decimals, 3)} ${token0Name} / ${getFullDisplayBalance(new BigNumber(estimate.token1), token1Decimals, 3)} ${token1Name})`} </Text>\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        {\n          ((zappingToken === token0Name && Number(allowances[0]) === 0) || (zappingToken === token1Name && Number(allowances[1]) === 0)) ?\n            pendingTx ? (\n              <Button width=\"100%\" isLoading={pendingTx} endIcon={<AutoRenewIcon spin color=\"currentColor\" />}>\n                {t('Approving')}\n              </Button>\n            ) : (\n              <Button\n                width=\"100%\"\n                onClick={async () => {\n                  setPendingTx(true)\n                  await handleApprove()\n                  setPendingTx(false)\n                }}\n              >\n                {t('Approve')}\n              </Button>\n            )\n            : pendingTx ? (\n              <Button width=\"100%\" isLoading={pendingTx} endIcon={<AutoRenewIcon spin color=\"currentColor\" />}>\n                {t('Confirming')}\n              </Button>\n            ) : (\n              <Button\n                width=\"100%\"\n                disabled={!lpTokensToStake.isFinite() || lpTokensToStake.eq(0) || lpTokensToStake.gt(new BigNumber(String(getFullDisplayBalance(zappingTokenBalance, 9))))}\n                onClick={async () => {\n                  setPendingTx(true)\n                  await handleZap()\n                  onDismiss?.()\n                  setPendingTx(false)\n                }}\n              >\n                {t('Confirm')}\n              </Button>\n            )}\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default ZapModal\n","import { useCallback } from 'react'\nimport { MaxUint256 } from '@ethersproject/constants'\nimport { Contract } from '@ethersproject/contracts'\nimport { useMasterchef, useNftContract, useNftSaleContract, useZapContract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getNftSaleContract } from 'utils/contractHelpers'\n\nconst useApproveFarm = (lpContract: Contract) => {\n  const masterChefContract = useMasterchef()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const handleApprove = useCallback(async () => {\n    return callWithGasPrice(lpContract, 'approve', [masterChefContract.address, MaxUint256])\n  }, [lpContract, masterChefContract, callWithGasPrice])\n\n  return { onApprove: handleApprove }\n}\n\nexport const useApproveZap = (lpContract: Contract) => {\n  const zapContract = useZapContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const handleApprove = useCallback(async () => {\n    return callWithGasPrice(lpContract, 'approve', [zapContract.address, MaxUint256])\n  }, [lpContract, zapContract, callWithGasPrice])\n\n  return { onApprove: handleApprove }\n}\n\n\n\nexport default useApproveFarm\n","export const getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\n  if (cakeRewardsApr && lpRewardsApr) {\n    return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  if (cakeRewardsApr) {\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  return null\n}\n","import { useCallback } from 'react'\nimport { MaxUint256 } from '@ethersproject/constants'\nimport { Contract } from '@ethersproject/contracts'\nimport { useMasterchef, useNftContract, useNftSaleContract, useZapContract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getNftSaleContract } from 'utils/contractHelpers'\n\nconst useApproveFarm = (lpContract: Contract) => {\n  const masterChefContract = useMasterchef()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const handleApprove = useCallback(async () => {\n    return callWithGasPrice(lpContract, 'approve', [masterChefContract.address, MaxUint256])\n  }, [lpContract, masterChefContract, callWithGasPrice])\n\n  return { onApprove: handleApprove }\n}\n\n\nexport default useApproveFarm\n","import { useCallback } from 'react'\nimport { harvestFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useHarvestFarm = (farmPid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    return harvestFarm(masterChefContract, farmPid)\n  }, [farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import { useCallback } from 'react'\nimport { stakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useStakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      return stakeFarm(masterChefContract, pid, amount)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakeFarms\n","import { useCallback } from 'react'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useUnstakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      return unstakeFarm(masterChefContract, pid, amount)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakeFarms\n","import { useIsomorphicEffect } from '@pancakeswap/uikit'\nimport { useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const [observerRefElement, setObserverRefElement] = useState(null)\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useIsomorphicEffect(() => {\n    const isSupported = typeof window === 'object' && window.IntersectionObserver\n\n    if (isSupported) {\n      if (!intersectionObserverRef.current && observerRefElement) {\n        const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n          setIsIntersecting(entry.isIntersecting)\n        }\n\n        intersectionObserverRef.current = new window.IntersectionObserver(checkObserverIsIntersecting, {\n          rootMargin: '0px',\n          threshold: 1,\n        })\n        intersectionObserverRef.current.observe(observerRefElement)\n      }\n\n      if (intersectionObserverRef.current && !observerRefElement) {\n        intersectionObserverRef.current.disconnect()\n        setIsIntersecting(false)\n      }\n    } else {\n      // If client doesnt support IntersectionObserver, set Intersecting to be true\n      setIsIntersecting(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerRefElement])\n\n  return { observerRef: setObserverRefElement, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { useState, useMemo, useEffect } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n  initialValue?: string\n}\n\nconst SearchInput: React.FC<React.PropsWithChildren<Props>> = ({\n  onChange: onChangeCallback,\n  placeholder = 'Search',\n  initialValue,\n}) => {\n  const [searchText, setSearchText] = useState('')\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n  useEffect(() => {\n    if (initialValue) {\n      setSearchText(initialValue)\n    }\n  }, [initialValue])\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  idPrefix: string\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<React.PropsWithChildren<ToggleViewProps>> = ({\n  idPrefix,\n  viewMode,\n  onToggle,\n}) => {\n  const handleToggleCard = useCallback(() => {\n    if (viewMode !== ViewMode.CARD) {\n      onToggle(ViewMode.CARD)\n    }\n  }, [onToggle, viewMode])\n\n  const handleToggleTable = useCallback(() => {\n    if (viewMode !== ViewMode.TABLE) {\n      onToggle(ViewMode.TABLE)\n    }\n  }, [onToggle, viewMode])\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id={`${idPrefix}CardView`} onClick={handleToggleCard}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id={`${idPrefix}TableView`} onClick={handleToggleTable}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import {\n  AutoRenewIcon,\n  BlockIcon,\n  CommunityIcon,\n  RefreshIcon,\n  Tag,\n  TagProps,\n  Text,\n  TimerIcon,\n  TooltipText,\n  useTooltip,\n  VerifiedIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { memo } from 'react'\n\nconst CoreTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag\n      variant=\"secondary\"\n      style={{ background: 'none' }}\n      outline\n      startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />}\n      {...props}\n    >\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst FarmAuctionTagToolTipContent = memo(() => {\n  const { t } = useTranslation()\n  return <Text color=\"text\">{t('Farm Auction Winner, add liquidity at your own risk.')}</Text>\n})\n\nconst FarmAuctionTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<FarmAuctionTagToolTipContent />, { placement: 'right' })\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} style={{ textDecoration: 'none' }}>\n        <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n          {t('Farm Auction')}\n        </Tag>\n      </TooltipText>\n    </>\n  )\n}\n\nconst StableFarmTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip('Fees are lower for stable LP', { placement: 'right' })\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} style={{ textDecoration: 'none', alignSelf: 'center' }}>\n        <Tag variant=\"failure\" outline {...props}>\n          {t('Stable LP')}\n        </Tag>\n      </TooltipText>\n    </>\n  )\n}\n\nconst CommunityTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport {\n  CoreTag,\n  FarmAuctionTag,\n  DualTag,\n  ManualPoolTag,\n  CompoundingPoolTag,\n  VoteNowTag,\n  SoonTag,\n  ClosedTag,\n  CommunityTag,\n  StableFarmTag,\n}\n","import styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  pid: number\n  lpLabel: string\n  lpSymbol: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  pid,\n  lpLabel,\n  lpSymbol,\n  multiplier,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <ApyButton\n          variant={hideButton ? 'text' : 'text-and-button'}\n          pid={pid}\n          lpSymbol={lpSymbol}\n          lpLabel={lpLabel}\n          multiplier={multiplier}\n          cakePrice={cakePrice}\n          apr={originalValue}\n          displayApr={value}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import styled from 'styled-components'\nimport { useFarmUser } from 'state/farms/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { TokenPairImage } from 'components/TokenImage'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: Token\n  quoteToken: Token\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 80px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={80} height={80} />\n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isDesktop } = useMatchBreakpoints()\n\n  return (\n    <Container>\n      {!isDesktop && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import styled from 'styled-components'\nimport { Text, HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of DEP rewards each farm receives, as a proportion of the DEP produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 DEP per block, a 40x farm would receive 40 DEP per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 6px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import { Button, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useToast from 'hooks/useToast'\nimport useCatchTxError from 'hooks/useCatchTxError'\n\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { FarmWithStakedValue } from '../../types'\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\nimport { ActionContainer, ActionContent, ActionTitles } from './styles'\nimport { getNumberForMobile } from '../../FarmCard/HarvestAction'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, loading: pendingTx } = useCatchTxError()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber, 9)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const { onReward } = useHarvestFarm(pid)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  return (\n    <ActionContainer>\n      {(pid === 0 || pid === 1) && (\n        <>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              SOMI\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Earned')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Heading>{getNumberForMobile(displayBalance)}</Heading>\n              {earningsBusd > 0 && (\n                <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n              )}\n            </div>\n            <Button\n              disabled={earnings.eq(0) || pendingTx || !userDataReady}\n              onClick={async () => {\n                const receipt = await fetchWithCatchTxError(() => {\n                  return onReward()\n                })\n                if (receipt?.status) {\n                  toastSuccess(\n                    `${t('Harvested')}!`,\n                    <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n                      {t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'SOMI' })}\n                    </ToastDescriptionWithTx>,\n                  )\n                  dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n                }\n              }}\n              ml=\"4px\"\n            >\n              {pendingTx ? t('Harvesting') : t('Harvest')}\n            </Button>\n          </ActionContent>\n        </>\n      )}\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import { AddIcon, Button, IconButton, MinusIcon, Skeleton, Text, useModal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useRouter } from 'next/router'\nimport { useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useFarmUser, useLpTokenPrice, usePriceCakeBusd } from 'state/farms/hooks'\nimport styled from 'styled-components'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport useApproveFarm from '../../../hooks/useApproveFarm'\nimport useStakeFarms from '../../../hooks/useStakeFarms'\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionContent, ActionTitles } from './styles'\nimport { FarmWithStakedValue } from '../../types'\nimport StakedLP from '../../StakedLP'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n  lpLabel?: string\n  displayApr?: string\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  apr,\n  multiplier,\n  lpSymbol,\n  lpLabel,\n  lpAddress,\n  quoteToken,\n  token,\n  userDataReady,\n  displayApr,\n  lpTotalSupply,\n  tokenAmountTotal,\n  quoteTokenAmountTotal,\n}) => {\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, loading: pendingTx } = useCatchTxError()\n  const { account } = useWeb3React()\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const router = useRouter()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const cakePrice = usePriceCakeBusd()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const handleStake = async (amount: string) => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onStake(amount)\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Staked')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your funds have been staked in the farm')}\n        </ToastDescriptionWithTx>,\n      )\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n    }\n  }\n\n  const handleUnstake = async (amount: string) => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onUnstake(amount)\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Unstaked')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your earnings have also been harvested to your wallet')}\n        </ToastDescriptionWithTx>,\n      )\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n    }\n  }\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onApprove()\n    })\n    if (receipt?.status) {\n      toastSuccess(t('Contract Enabled'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n    }\n  }, [onApprove, dispatch, account, pid, t, toastSuccess, fetchWithCatchTxError])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <StakedLP\n              stakedBalance={stakedBalance}\n              lpSymbol={lpSymbol}\n              quoteTokenSymbol={quoteToken.symbol}\n              tokenSymbol={token.symbol}\n              lpTotalSupply={lpTotalSupply}\n              tokenAmountTotal={tokenAmountTotal}\n              quoteTokenAmountTotal={quoteTokenAmountTotal}\n            />\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => router.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake')}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => router.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={pendingTx} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\nimport { getNumberForMobile } from '../FarmCard/HarvestAction'\n\nexport interface FeesProps {\n  fees: number\n}\n\nconst Amount = styled.span<{ fees: number }>`\n  color: ${({ fees, theme }) => (fees ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Fees: React.FunctionComponent<FeesProps> = ({ fees }) => {\n \n  return (\n    <Amount fees={fees}>{fees/100}%</Amount>\n  )\n}\n\nexport default Fees\n","import styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Button, LinkExternal, Text, useMatchBreakpoints, useModal } from '@pancakeswap/uikit'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { FarmWithStakedValue } from '../../types'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\nimport { getBlockExploreLink } from 'utils'\nimport ZapModal from '../../ZapModal'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport Fees from '../Fees'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div``\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { isDesktop } = useMatchBreakpoints()\n\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n  const isActive = farm.pid === 0 || farm.pid === 1\n  const { quoteToken, token } = farm\n  const { account } = useActiveWeb3React()\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const bsc = getBlockExploreLink(farm.lpAddress, 'address')\n  const info = `/info/pools/${farm.lpAddress}`\n\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const [onPresentDeposit] = useModal(\n    \n    <ZapModal\n       token0Decimals={farm.token.decimals}\n       token1Decimals={farm.quoteToken.decimals}\n       token0Name = {farm.token.symbol}\n       token1Name = {farm.quoteToken.symbol}\n       token0Address = {farm.token.address}\n       token1Address = {farm.quoteToken.address}\n       lpAddress = {farm.lpAddress}\n       lpTokenName = {lpLabel}\n       addLiquidityUrl = {addLiquidityUrl}\n       pid={farm.pid}\n    />,\n  )\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        <ValueContainer>\n          {farm.isCommunity && farm.auctionHostingEndDate && (\n            <ValueWrapper>\n              <Text>{t('Auction Hosting Ends')}</Text>\n              <Text paddingLeft=\"4px\">\n                {new Date(farm.auctionHostingEndDate).toLocaleString(locale, {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                })}\n              </Text>\n            </ValueWrapper>\n          )}\n          {!isDesktop && (\n            <>\n              <ValueWrapper>\n                <Text>{t('APR')}</Text>\n                <Apr {...apr} />\n              </ValueWrapper>\n              <ValueWrapper>\n                <Text>{t('Multiplier')}</Text>\n                <Multiplier {...multiplier} />\n              </ValueWrapper>\n              <ValueWrapper>\n                <Text>{t('Deposit Fee')}</Text>\n                <Fees fees={farm.depositFeeBP} />\n              </ValueWrapper>\n              <ValueWrapper>\n                <Text>{t('Withdraw Fee')}</Text>\n                <Fees fees={farm.withdrawFeeBP} />\n              </ValueWrapper>\n              <ValueWrapper>\n                <Text>{t('Liquidity')}</Text>\n                <Liquidity {...liquidity} />\n              </ValueWrapper>\n            </>\n          )}\n        </ValueContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`/add/${liquidityUrlPathParts}`}>\n              {t('Get %symbol%', { symbol: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n        {isActive && (\n          <Button\n            width=\"100%\"\n            marginTop=\"8px\"       \n            onClick={onPresentDeposit} \n            disabled={!account}\n          >\n            Zap in\n          </Button>\n        )}\n        {/* <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal> */}\n      </InfoContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} lpLabel={lpLabel} displayApr={apr.value} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n  children: any\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import BigNumber from 'bignumber.js'\nimport { DeserializedFarm } from 'state/types'\n\nexport type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'type',\n    sortable: false,\n    label: '',\n  },\n  {\n    id: 3,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 4,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 5,\n    name: 'depositFeeBP',\n    sortable: true,\n    label: 'Deposit Fee',\n  },\n  {\n    id: 6,\n    name: 'withdrawFeeBP',\n    sortable: true,\n    label: 'Withdraw Fee BP',\n  },\n  {\n    id: 7,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 8,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 9,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport interface FarmWithStakedValue extends DeserializedFarm {\n  apr?: number\n  lpRewardsApr?: number\n  liquidity?: BigNumber\n}\n","import styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\nimport { getNumberForMobile } from '../FarmCard/HarvestAction'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{getNumberForMobile(earnings).toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import { useEffect, useState, createElement } from 'react'\nimport styled from 'styled-components'\nimport { Flex, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/farms/hooks'\n\nimport { FarmAuctionTag, CoreTag } from 'components/Tags'\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema, FarmWithStakedValue } from '../types'\nimport Fees from './Fees'\nimport Earned, { EarnedProps } from './Earned'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  type: 'core' | 'community'\n  depositFeeBP: number\n  withdrawFeeBP: number\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 16px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isDesktop, isMobile } = useMatchBreakpoints()\n\n  const isSmallerScreen = !isDesktop\n  const tableSchema = isSmallerScreen ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isMobile) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'depositFeeBP':\n                return (\n                  <td key={key}>\n                    <CellInner style={{ width: '100px' }}>\n                      <CellLayout label={t('Deposit Fee')}>\n                       <Fees fees = {props.depositFeeBP} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'withdrawFeeBP':\n                return (\n                  <td key={key}>\n                    <CellInner style={{ width: '100px' }}>\n                      <CellLayout label={t('Withdraw Fee')}>\n                        <Fees fees = {props.withdrawFeeBP} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'type':\n                return (\n                 <></>\n                )\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...props.apr} hideButton={isSmallerScreen} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <>\n        <tr style={{ cursor: 'pointer' }} onClick={toggleActionPanel}>\n          <FarmMobileCell colSpan={3}>\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n              <Farm {...props.farm} />\n              {props.type === 'community' ? (\n                <FarmAuctionTag marginRight=\"16px\" scale=\"sm\" />\n              ) : (\n                <CoreTag marginRight=\"16px\" scale=\"sm\" />\n              )}\n            </Flex>\n          </FarmMobileCell>\n        </tr>\n        <StyledTr onClick={toggleActionPanel}>\n          <td width=\"33%\">\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n          </td>\n          <td width=\"33%\">\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </td>\n          <td width=\"33%\">\n            <CellInner style={{ justifyContent: 'flex-end' }}>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellInner>\n          </td>\n        </StyledTr>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={8}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import { useRef, useMemo, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon, RowType } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getDisplayApr } from '../getDisplayApr'\n\nimport Row, { RowProps } from './Row'\nimport { DesktopColumnSchema, FarmWithStakedValue } from '../types'\n\nexport interface ITableProps {\n  farms: FarmWithStakedValue[]\n  userDataReady: boolean\n  cakePrice: BigNumber\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 6px;\n  margin: 16px 0px;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n  scroll-margin-top: 64px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = ({ farms, cakePrice, userDataReady }) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n\n  const columns = useMemo(\n    () =>\n      DesktopColumnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      })),\n    [],\n  )\n\n  const scrollToTop = useCallback((): void => {\n    window.scrollTo({\n      top: tableWrapperEl.current.offsetTop,\n      behavior: 'smooth',\n    })\n  }, [])\n\n  const rowData = farms.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\n        pid: farm.pid,\n        multiplier: farm.multiplier,\n        lpLabel,\n        lpSymbol: farm.lpSymbol,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings), 9),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      type: farm.isCommunity ? 'community' : 'core',\n      depositFeeBP: farm.depositFeeBP,\n      withdrawFeeBP: farm.withdrawFeeBP,\n      details: farm,\n    }\n\n    return row\n  })\n\n  const sortedRows = rowData.map((row) => {\n    // @ts-ignore\n    const newRow: RowProps = {}\n    columns.forEach((column) => {\n      if (!(column.name in row)) {\n        throw new Error(`Invalid row data, ${column.name} not found`)\n      }\n      newRow[column.name] = row[column.name]\n    })\n    return newRow\n  })\n\n  return (\n    <Container id=\"farms-table\">\n      <TableContainer id=\"table-container\">\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {sortedRows.map((row) => {\n                return <Row {...row} userDataReady={userDataReady} key={`table-row-${row.farm.pid}`} depositFeeBP={row.depositFeeBP} withdrawFeeBP={row.withdrawFeeBP} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useRouter } from 'next/router'\nimport { NextLinkFromReactRouter } from 'components/NextLink'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const router = useRouter()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (router.pathname) {\n    case '/staking':\n      activeIndex = 0\n      break\n    case '/staking/history':\n      activeIndex = 1\n      break\n    case '/_mp/staking/history':\n      activeIndex = 1\n      break\n    case '/staking/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={NextLinkFromReactRouter} to=\"/staking\">\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem as={NextLinkFromReactRouter} to=\"/staking/history\" id=\"finished-farms-button\">\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import { Text } from '@pancakeswap/uikit'\nimport React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  suffix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '28px',\n  lineHeight = '1',\n  prefix = '',\n  suffix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  \n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {value.toFixed(2)}\n      {suffix}\n    </Text>\n  )\n}\n\nexport default CardValue\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useEffect, useCallback, useState, useMemo, useRef, createContext } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@pancakeswap/wagmi'\nimport { Image, Heading, Toggle, Text, Button, ArrowForwardIcon, Flex, Link, Box } from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { NextLinkFromReactRouter } from 'components/NextLink'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport { useFarms, usePollFarmsWithUserData, usePriceCakeBusd, useTotalValue } from 'state/farms/hooks'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { DeserializedFarm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFarmApr } from 'utils/apr'\nimport orderBy from 'lodash/orderBy'\nimport { latinise } from 'utils/latinise'\nimport { useUserFarmStakedOnly, useUserFarmsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport { useRouter } from 'next/router'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport Loading from 'components/Loading'\nimport ToggleView from 'components/ToggleView/ToggleView'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { FarmWithStakedValue } from './components/types'\nimport { Label } from 'recharts'\nimport CardValue from './components/CardValue'\n\nconst textBox = {\n  backgroundColor: 'rgba(50, 50, 50, 0.3)',\n  borderRadius: '25px',\n  border: '1px solid gray',\n  padding: '10px',\n  margin: 'auto',\n  width: 'fit-content',\n  minWidth: '200px',\n  maxWidth: '640px',\n  color: 'white',\n};\n\nconst imageStyle = {\n  borderRadius: '20px',\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.5)',\n  display: 'block',\n  margin: 'auto',\n  padding: '10px',\n};\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\n\nconst FinishedTextContainer = styled(Flex)`\n  padding-bottom: 32px;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst FinishedTextLink = styled(Link)`\n  font-weight: 400;\n  white-space: nowrap;\n  text-decoration: underline;\n`\n\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst Farms: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const { pathname, query: urlQuery } = useRouter()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded, poolLength, regularCakePerBlock } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState(typeof urlQuery?.search === 'string' ? urlQuery?.search : '')\n  const [viewMode, setViewMode] = useUserFarmsViewMode()\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const chosenFarmsLength = useRef(0)\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n  const tvl = useTotalValue()\n  usePollFarmsWithUserData()\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n  const activeFarms = farmsLP.filter(\n    (farm) => (farm.pid === 0 || farm.pid === 1)\n  )\n  const inactiveFarms = farmsLP.filter(\n    (farm) => (farm.pid !== 0 && farm.pid !== 1)\n  )\n  const archivedFarms = farmsLP\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: DeserializedFarm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteTokenPriceBusd) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteTokenPriceBusd)\n        const { cakeRewardsApr, lpRewardsApr } = isActive\n          ? getFarmApr(\n              ChainId.SOMNIA,\n              new BigNumber(farm.poolWeight),\n              cakePrice,\n              totalLiquidity,\n              farm.lpAddress,\n              regularCakePerBlock,\n            )\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, query, isActive, regularCakePerBlock],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n\n  const chosenFarmsMemoized = useMemo(() => {\n    let chosenFarms = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        case 'latest':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.pid), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  chosenFarmsLength.current = chosenFarmsMemoized.length\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\n        if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\n          return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\n        }\n        return farmsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <FarmsContext.Provider value={{ chosenFarmsMemoized }}>\n      <PageHeader>\n        <Flex flexDirection={['column', 'column', 'row', 'row']} justifyContent='space-between'>\n          <Box>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Staking')}\n            </Heading>\n          </Box>\n          <Box padding=\"24px\" marginRight={[0, 0, 20, 20]} marginTop={[20, 20, 0, 0]} border=\"1px solid #524B63\" borderRadius={16}>\n            <Heading scale='lg'>{t('Total LP Value')}</Heading>\n            <CardValue value={tvl.toNumber()} prefix=\"$\" fontSize=\"40px\" decimals={2} />\n          </Box>\n        </Flex>\n      </PageHeader>\n      <Page>\n      {/* <div style={textBox}>\n        <p style={{marginBottom: '10px'}}><div style={{color: '#FFFFFF'}}>defipower.com will have two Liquidity Pools (LP's) in the \"<u><a href=\"/staking\">Live</a></u>\" section fully working and earning yield, these LP's are DEP-WPLS and DEP-DAI, all other LP's can now be found in the \"<u><a href=\"/staking/history\">Finished</a></u>\" section, users MUST withdrawal from these pools ASAP. Simply click on the \"-\" minus button to remove your stake (please note that all accrued DEP will not be harvestable in these discontinued pools)</div></p>\n      </div> */}\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView idPrefix=\"clickFarm\" viewMode={viewMode} onToggle={setViewMode} />\n            <ToggleWrapper>\n              <Toggle\n                id=\"staked-only-farms\"\n                checked={stakedOnly}\n                onChange={() => setStakedOnly(!stakedOnly)}\n                scale=\"sm\"\n              />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('APR'),\n                    value: 'apr',\n                  },\n                  {\n                    label: t('Multiplier'),\n                    value: 'multiplier',\n                  },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                  {\n                    label: t('Latest'),\n                    value: 'latest',\n                  },\n                ]}\n                onOptionChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput initialValue={query} onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {viewMode === ViewMode.TABLE ? (\n          <Table farms={chosenFarmsMemoized} cakePrice={cakePrice} userDataReady={userDataReady} />\n        ) : (\n          <FlexLayout>{children}</FlexLayout>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\">\n            <Loading />\n          </Flex>\n        )}\n        <div ref={observerRef} />\n        {/* <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} /> */}\n      </Page>\n    </FarmsContext.Provider>\n  )\n}\n\nexport const FarmsContext = createContext({ chosenFarmsMemoized: [] })\n\nexport default Farms\n","import { FC } from 'react'\nimport Farms, { FarmsContext } from './Farms'\n\nexport const FarmsPageLayout: React.FC<React.PropsWithChildren> = ({ children }) => {\n  return <Farms>{children}</Farms>\n}\n\nexport { FarmsContext }\n"],"names":["RoiInputContainer","styled","Box","theme","colors","textSubtle","StyledTokenInput","input","isWarning","warning","shadows","inset","text","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ZapModalInput","max","symbol","onChange","onSelectMax","value","addLiquidityUrl","inputTitle","decimals","useTranslation","t","isBalanceZero","div","style","position","Flex","justifyContent","pl","fontSize","balance","balanceUnits","parseUnits","formatBigNumber","displayBalance","alignItems","pattern","inputMode","step","min","placeholder","Button","scale","onClick","mr","color","Link","bold","href","external","StyledSpacer","props","size","s","useContext","ThemeContext","spacing","StyledModalActions","primaryDark","StyledModalAction","children","l","Children","length","child","i","Spacer","Outer","background","gradientBubblegum","Inner","Container","compoundingIndexToFrequency","EditingCurrency","TOKEN","USD","CalculatorMode","ROI_BASED_ON_PRINCIPAL","PRINCIPAL_BASED_ON_ROI","defaultState","controls","compounding","compoundingFrequency","activeCompoundingIndex","stakingDuration","mode","editingCurrency","data","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","state","action","type","payload","toggledCompounding","index","autoCompoundFrequency","parseFloat","toFixed","currencyAfterChange","initialState","stakingTokenPrice","earningTokenPrice","useReducer","merge","dispatch","useEffect","setPrincipalFromUSDValue","amount","principalAsTokenBN","BigNumber","gt","setPrincipalFromTokenValue","useCallback","principalAsUsdBN","times","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","isNaN","toNumber","DefaultCompoundStrategy","apr","performanceFee","principalInUSDAsNumber","compoundFrequency","interestBreakdown","getInterestBreakdown","principalInUSD","hasInterest","Number","roiAsUSD","getRoi","amountEarned","amountInvested","principalForExpectedRoi","getPrincipalForInterest","principalUSD","principalToken","rotate","keyframes","ArrowContainer","primary3D","calculatorState","useState","key","setKey","prevKey","prevId","parseInt","split","my","ArrowDownIcon","width","height","ArrowUpIcon","Footer","dropdown","BulletList","isFarm","apy","displayApr","multiplier","linkLabel","linkHref","isExpanded","setIsExpanded","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","gridRowCount","lpRewardsAPR","useMemo","isFinite","Math","p","flexDirection","ExpandableLabel","expanded","prev","px","Grid","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","getApy","span","ref","multiplierRef","HelpIcon","multiplierTooltipVisible","multiplierTooltip","li","display","lineHeight","mt","fee","MILLION","RoiCardWrapper","radii","default","RoiCardInner","RoiDisplayContainer","RoiDollarAmount","fadeOut","earningTokenSymbol","expectedRoi","setExpectedRoi","inputRef","useRef","current","focus","onEnterEditing","toLocaleString","minimumFractionDigits","maximumFractionDigits","textTransform","event","currentTarget","validity","valid","roiAsString","target","replace","IconButton","variant","CheckmarkIcon","PencilIcon","ml","maxWidth","lineBreak","StyledModal","Modal","md","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","onDismiss","onBack","stakingTokenBalance","stakingTokenSymbol","initialValue","strategy","header","bCakeCalculatorSlot","useWeb3React","account","balanceInputRef","useRoiCalculatorReducer","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","onUserInput","DURATION","title","headerBackground","mb","asset","BalanceInput","inputProps","currencyValue","innerRef","unit","switchEditingUnits","onFocus","lte","getBalanceNumber","toString","activeIndex","onItemClick","map","duration","ButtonMenuItem","flex","Checkbox","checked","AnimatedArrow","RoiCard","RoiCalculatorFooter","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","options","onOptionChange","defaultOptionIndex","placeHolderText","setIsOpen","optionSelected","setOptionSelected","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","document","addEventListener","removeEventListener","undefined","label","ArrowDropDownIcon","option","selectedIndex","getImageUrlFromToken","token","address","isNative","wrapped","TokenPairImage","primaryToken","secondaryToken","UIKitTokenPairImage","primarySrc","secondarySrc","DAYS_TO_CALCULATE_AGAINST","timesCompounded","aprAsDecimal","roundingDecimalsNew","round","days","daysAsDecimalOfYear","principal","interestEarned","interest","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","quoteTokenAddress","tokenAddress","wBnbAddress","bscTokens","secondPart","stakedBalance","onConfirm","tokenName","lpPrice","lpLabel","cakePrice","val","setVal","pendingTx","setPendingTx","showRoiCalculator","setShowRoiCalculator","fullBalance","getFullDisplayBalance","lpTokensToStake","fullBalanceNumber","usdToStake","annualRoi","annualRoiAsNumber","handleChange","formatNumber","e","handleSelectMax","RoiCalculatorModal","plus","ModalInput","ModalActions","isLoading","endIcon","AutoRenewIcon","spin","eq","LinkExternal","alignSelf","ApyLabelContainer","pid","lpSymbol","useLpTokenPrice","useFarmUser","tokenBalance","onPresentApyModal","useModal","CalculateIcon","Wrapper","primary","handleOnClick","aria-label","role","ChevronUpIcon","ChevronDownIcon","StyledLinkExternal","bscScanAddress","farm","infoAddress","removed","totalValueFormatted","isCommunity","auctionHostingEndDate","currentLanguage","locale","useActiveWeb3React","onPresentDeposit","ZapModal","token0Decimals","token1Decimals","quoteToken","token0Name","token1Name","token0Address","token1Address","lpAddress","lpTokenName","Date","month","day","year","Skeleton","marginTop","MultiplierTag","Tag","isCommunityFarm","Heading","IconButtonWrapper","lpTotalSupply","tokenAmountTotal","quoteTokenAmountTotal","useStakeFarms","onStake","useUnstakeFarms","onUnstake","usePriceCakeBusd","router","useRouter","useAppDispatch","useToast","toastSuccess","useCatchTxError","fetchWithCatchTxError","handleStake","receipt","status","ToastDescriptionWithTx","txHash","transactionHash","fetchFarmUserDataAsync","pids","handleUnstake","DepositModal","onPresentWithdraw","WithdrawModal","StakedLP","quoteTokenSymbol","tokenSymbol","some","item","pathname","includes","MinusIcon","AddIcon","Action","loading","userData","allowance","earnings","isApproved","isGreaterThan","lpContract","useERC20","useApproveFarm","onApprove","handleApprove","chainId","ChainId","pr","HarvestAction","StakeAction","ConnectWalletButton","ConicBorder","StyledCard","Card","FarmCardInnerContainer","ExpandingWrapper","cardBorder","showExpandableSection","setShowExpandableSection","liquidity","toUpperCase","earnLabel","dual","liquidityUrlPathParts","getLiquidityUrlPathParts","BASE_ADD_LIQUIDITY_URL","toggleExpandableSection","isActive","CardHeading","ApyButton","depositFeeBP","withdrawFeeBP","CardActionsContainer","ExpandableSectionButton","DetailsSection","getBlockExploreLink","codeFromStorage","getLanguageCodeFromLS","getNumberForMobile","number","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","useHarvestFarm","onReward","rawEarningsBalance","getBalanceAmount","BIG_ZERO","earningsBusd","multipliedBy","Balance","prefix","formatLpBalance","gap","br","zapContract","useZapContract","handleZap","from","to","routerAddr","recipient","zapTokenIn","onZap","useZapInToken","useTokenBalance","fetchStatus","allowances","setAllowances","zappingToken","setZappingToken","token0","token1","estimate","setEstimate","token0Balance","zappingTokenBalance","setZappingTokenBalance","zappingTokenDecimals","setZappingTokenDecimals","getAllowance","calls","rawLpAllowances","parsedLpAllowances","name","params","getZapAddress","multicall","erc20ABI","lpBalance","toJSON","token0BalanceStatus","handleChangeAsset","_tokenBalance","_tokenDecimals","estimateZap","token1Balance","estimateZapInToken","ROUTER_ADDRESS","n","String","token0Contract","token1Contract","useCallWithGasPrice","callWithGasPrice","MaxUint256","useApproveZap","Select","marginBottom","FetchStatus","getDisplayApr","cakeRewardsApr","lpRewardsApr","masterChefContract","useMasterchef","farmPid","harvestFarm","stakeFarm","unstakeFarm","observerRefElement","setObserverRefElement","intersectionObserverRef","isIntersecting","setIsIntersecting","useIsomorphicEffect","window","IntersectionObserver","entry","rootMargin","threshold","observe","disconnect","observerRef","Latinise","latin_map","τ","Τ","latinise","x","InputWrapper","searchText","setSearchText","debouncedOnChange","debounce","onChangeCallback","idPrefix","viewMode","onToggle","handleToggleCard","ViewMode","handleToggleTable","id","CardViewIcon","ListViewIcon","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","CoreTag","outline","startIcon","VerifiedIcon","FarmAuctionTagToolTipContent","memo","FarmAuctionTag","TooltipText","textDecoration","CommunityIcon","AprWrapper","originalValue","hideButton","TokenWrapper","rawStakedBalance","ArrowIcon","toggled","actionPanelToggled","useMatchBreakpoints","isDesktop","ReferenceElement","MultiplierWrapper","lg","displayMultiplier","toLowerCase","tooltipContent","LiquidityWrapper","displayLiquidity","ActionContainer","xl","ActionTitles","ActionContent","userDataReady","earningsBigNumber","isZero","Amount","fees","textDisabled","expandAnimation","collapseAnimation","StakeContainer","InfoContainer","ValueContainer","ValueWrapper","details","bsc","paddingLeft","Apr","Multiplier","Fees","Liquidity","StakedAction","Label","ContentContainer","MobileColumnSchema","sortable","DesktopColumnSchema","earned","cells","Farm","Earned","Details","CellInner","StyledTr","EarnedMobileCell","AprMobileCell","FarmMobileCell","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","useDelayedUnmount","toggleActionPanel","isMobile","isSmallerScreen","tableSchema","columnNames","column","tr","cursor","colSpan","marginRight","td","CellLayout","Object","keys","columnIndex","indexOf","createElement","ActionPanel","card","TableWrapper","StyledTable","TableBody","TableContainer","ScrollButtonContainer","farms","tableWrapperEl","columns","sort","a","b","original","scrollToTop","scrollTo","top","offsetTop","behavior","sortedRows","row","newRow","forEach","Error","Row","hasStakeInFinishedFarms","as","NextLinkFromReactRouter","NotificationDot","show","suffix","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","FarmsContext","Image","createContext","chosenFarmsMemoized","query","useFarms","userDataLoaded","regularCakePerBlock","poolLength","urlQuery","search","setQuery","useUserFarmsViewMode","setViewMode","sortOption","setSortOption","useIntersectionObserver","chosenFarmsLength","isArchived","isInactive","tvl","useTotalValue","usePollFarmsWithUserData","useUserFarmStakedOnly","stakedOnly","setStakedOnly","activeFarms","farmsLP","filter","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","quoteTokenPriceBusd","totalLiquidity","getFarmApr","poolWeight","lowercaseQuery","numberOfFarmsVisible","setNumberOfFarmsVisible","chosenFarms","orderBy","slice","sortFarms","farmsCurrentlyVisible","Provider","PageHeader","padding","border","borderRadius","CardValue","Page","ToggleView","Toggle","FarmTabButtons","marginLeft","SearchInput","Table","FlexLayout","Loading","FarmsPageLayout","Farms"],"sourceRoot":""}