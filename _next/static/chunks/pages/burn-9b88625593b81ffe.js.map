{"version":3,"file":"static/chunks/pages/burn-9b88625593b81ffe.js","mappings":"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","sources":["webpack://_N_E/?4b77","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/AutoRenew.tsx","webpack://_N_E/./src/views/Burn/components/styleds.tsx","webpack://_N_E/./src/views/Burn/index.tsx","webpack://_N_E/./src/pages/burn.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/burn\",\n      function () {\n        return require(\"private-next-pages/burn.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/burn\"])\n      });\n    }\n  ","import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _object_spread_props from \"@swc/helpers/src/_object_spread_props.mjs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport Svg from \"../Svg\";\nvar Icon = function(props) {\n    return /*#__PURE__*/ _jsx(Svg, _object_spread_props(_object_spread({\n        viewBox: \"0 0 24 24\"\n    }, props), {\n        children: /*#__PURE__*/ _jsx(\"path\", {\n            d: \"M12 6V7.79C12 8.24 12.54 8.46 12.85 8.14L15.64 5.35C15.84 5.15 15.84 4.84 15.64 4.64L12.85 1.85C12.54 1.54 12 1.76 12 2.21V4C7.58 4 4 7.58 4 12C4 13.04 4.2 14.04 4.57 14.95C4.84 15.62 5.7 15.8 6.21 15.29C6.48 15.02 6.59 14.61 6.44 14.25C6.15 13.56 6 12.79 6 12C6 8.69 8.69 6 12 6ZM17.79 8.71C17.52 8.98 17.41 9.4 17.56 9.75C17.84 10.45 18 11.21 18 12C18 15.31 15.31 18 12 18V16.21C12 15.76 11.46 15.54 11.15 15.86L8.36 18.65C8.16 18.85 8.16 19.16 8.36 19.36L11.15 22.15C11.46 22.46 12 22.24 12 21.8V20C16.42 20 20 16.42 20 12C20 10.96 19.8 9.96 19.43 9.05C19.16 8.38 18.3 8.2 17.79 8.71Z\"\n        })\n    }));\n};\nexport default Icon;\n","import { ErrorIcon, Flex, Text } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport styled, { css } from 'styled-components'\n\nexport const Wrapper = styled(Flex)`\n  position: relative;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import styled, { keyframes } from 'styled-components';\nimport { Text, Box, Flex, Button, Heading, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FlexGap } from 'components/Layout/Flex'\nimport { BURN_ADDRESS, EXCHANGE_DOCS_URLS } from 'config/constants'\nimport NumericalInput from 'components/CurrencyInputPanel/NumericalInput'\nimport { CurrencyLogo } from 'components/Logo'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useCallback, useEffect, useState } from 'react'\nimport { CSSProperties } from 'react';\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { usePresaleState, usePresaleUserData } from 'state/presale/hooks'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport BigNumber from 'bignumber.js'\nimport useToast from 'hooks/useToast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useERC20 } from 'hooks/useContract'\nimport { pulseChainTokens } from '@pancakeswap/tokens'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { Wrapper } from './components/styleds'\nimport { AppBody } from '../../components/App'\nimport Page from '../Page'\nimport { parseUnits } from '@ethersproject/units';\nimport { callWithEstimateGas } from 'utils/calls';\nimport { useGasPrice } from 'state/user/hooks';\n\nconst rotate = keyframes`\n  100% {\n    transform: rotate(1turn);\n  }\n`;\nconst ConicBorder = styled.div`\n  position: relative;\n  z-index: 0;\n  margin: 20px;\n  border-radius: 30px;\n  overflow: hidden;\n  padding: 4px !important;\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -2;\n    left: -50%;\n    top: -50%;\n    width: 200%;\n    height: 200%;\n    background-color: #1a232a;\n    background-repeat: no-repeat;\n    background-position: 0 0;\n    background-image: conic-gradient(transparent, rgba(168, 239, 255, 1), transparent 20%);\n    animation: ${rotate} 2s linear infinite;\n  }\n  &::after {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    left: 6px;\n    top: 6px;\n    width: calc(100% - 12px);\n    height: calc(100% - 12px);\n    border-radius: 5px;\n  }\n`;\nconst gradientOverlayStyle: CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  background: 'radial-gradient(circle, rgba(24, 48, 128, 1), rgba(12, 24, 64, 1), rgba(6, 12, 32, 1), rgba(0, 0, 0, 1), black)',\n  opacity: 1,\n  zIndex: -1,\n};\nconst backgroundLogo: CSSProperties = {\n  position: 'relative',\n  background: `url('/images/home/lunar-bunny/background_logo.png') right bottom no-repeat`,\n  backgroundSize: 'auto',\n};\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\nconst Container = styled.div<{ error?: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme, error }) => theme.shadows[error ? 'warning' : 'inset']};\n`\nconst InputRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 0.25rem;\n  flex-wrap: wrap;\n`\nexport default function XAmplify() {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const { fetchWithCatchTxError, loading: pendingTx } = useCatchTxError()\n  const xfnContract = useERC20(pulseChainTokens.xfn.address)\n  const gasPrice = useGasPrice()\n  const { data, userData } = usePresaleState()\n  const { toastSuccess } = useToast()\n  let isClaimable = false\n  if (Number(data.endedOn) > 0) {\n    isClaimable = true\n  }\n  const userAvailableAmount = getBalanceAmount(new BigNumber(userData.availableOf), 9).toString()\n  const userClaimedAmount = getBalanceAmount(new BigNumber(userData.claimedOf), 9)\n  usePresaleUserData()\n  const inputCurrency = useCurrency(pulseChainTokens.xfn.address)\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, inputCurrency ?? undefined)\n  const [inputAmount, setInputAmount] = useState<any>('')\n  const [outputAmount, setOutputAmount] = useState<any>('')\n\n  const handleInput = useCallback((val: any) => {\n    setInputAmount(val)\n    if (Number(val) === 0) {\n      setOutputAmount(0)\n    } else {\n      setOutputAmount(Math.floor(Number(new BigNumber(val))) / 1000000)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (Number(outputAmount) === 0) {\n      setInputAmount(0)\n    } else {\n      setInputAmount(Math.floor(Number(new BigNumber(outputAmount))) / 1000000000000)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputCurrency])\n  const handleSelectMax = useCallback(() => {\n    handleInput(selectedCurrencyBalance.toExact())\n  }, [handleInput, selectedCurrencyBalance])\n\n  const handleBurn = async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return callWithEstimateGas(xfnContract, 'transfer', [BURN_ADDRESS, parseUnits(inputAmount, 9).toString()], {\n        gasPrice,\n      })\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        t('You have burnt XFNs')        \n      )\n    }    \n  }\n  return (\n    <>\n      <div style={gradientOverlayStyle}></div>\n      <div style={backgroundLogo}>\n      <Page style={{ position: 'relative', minWidth:\"400px\" }} helpUrl={`${EXCHANGE_DOCS_URLS}/overview/ido`} >\n        <Flex\n          width=\"100%\"\n          justifyContent=\"center\"\n          position=\"relative\"\n          flexDirection={['column', 'column', 'column', 'row']}\n        >\n          <Flex\n            flexDirection={['column', 'column', 'column', 'row']}\n            justifyContent=\"center\"\n            alignItems={['center', 'center', 'center', 'start']}\n          >\n            <ConicBorder>\n                <AppBody>\n                  <Wrapper id=\"presale-page\" style={{ minHeight: '372px', minWidth:\"400px\" }}>\n                    <AutoColumn gap=\"sm\">\n                      <Flex alignItems=\"center\" justifyContent=\"center\" my=\"16px\">\n                          <CurrencyLogo currency={inputCurrency} size=\"32px\" />\n                          <Heading scale='lg' ml=\"10px\">{inputCurrency?.name}</Heading>                        \n                      </Flex>\n                      <FlexGap gap=\"4px\" flexDirection={['column', 'column', 'row']}>\n                        <InputPanel>\n                          <Flex justifyContent=\"space-between\">\n                          <Text>\n                          {`${inputCurrency?.symbol} `}\n                          {inputCurrency\n                            ? t('Balance: %balance%', {\n                                balance: selectedCurrencyBalance?.toSignificant(6) ?? t('Loading'),\n                              })\n                            : ' -'}\n                          </Text>\n                            {account && (\n                              <Button variant=\"text\" scale=\"xs\" onClick={handleSelectMax}>\n                                MAX\n                              </Button>\n                            )}\n                          </Flex>\n                          <Container as=\"label\">\n                            <LabelRow>\n                              <CurrencyLogo currency={inputCurrency} />\n                              <NumericalInput\n                                className=\"token-amount-input\"\n                                value={inputAmount}\n                                onUserInput={handleInput}\n                              />\n                            </LabelRow>\n                            <InputRow style={{ padding: '0.25rem 0.75rem 0.75rem 0.75rem' }} />\n                          </Container>\n                        </InputPanel>\n                      </FlexGap>\n                      {Number(userAvailableAmount) > 0 ? (\n                        <>\n                          <Flex justifyContent=\"space-between\">\n                            <Text>Estimate amount</Text>\n                            <Text>{Number(userAvailableAmount) - Number(userClaimedAmount)} SOMI</Text>\n                          </Flex>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                    </AutoColumn>                    \n                    <Box width=\"100%\" my=\"12px\" mt=\"6px\">\n                      {!account ? (\n                        <ConnectWalletButton width=\"100%\" scale=\"md\" />\n                      ) : (     \n                        <Button\n                          isLoading={pendingTx}\n                          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                          mt=\"20px\"\n                          width=\"100%\"\n                          onClick={handleBurn}\n                        >\n                          {pendingTx ? t('Burning') : t('Burn')}\n                        </Button>                                              \n                      )}\n                    </Box>                    \n                  </Wrapper>\n                </AppBody>\n            </ConicBorder>\n          </Flex>\n        </Flex>\n      </Page>\n      </div>\n    </>\n  )\n}\n","import { CHAIN_IDS } from 'utils/wagmi'\nimport Burn from '../views/Burn'\n\nconst BurnPage = () => {\n  return <Burn />\n}\n\nBurnPage.chains = CHAIN_IDS\n\nexport default BurnPage\n"],"names":["window","__NEXT_P","push","props","_jsx","Svg","_object_spread_props","_object_spread","viewBox","children","d","Wrapper","styled","Flex","clickable","css","Text","theme","severity","colors","failure","warning","text","success","background","dropdown","attrs","ellipsis","AutoColumn","rotate","keyframes","ConicBorder","gradientOverlayStyle","position","top","left","width","height","opacity","zIndex","backgroundLogo","backgroundSize","LabelRow","InputPanel","backgroundAlt","Container","input","error","shadows","InputRow","XAmplify","useTranslation","t","useActiveWeb3React","account","useCatchTxError","fetchWithCatchTxError","loading","xfnContract","useERC20","pulseChainTokens","gasPrice","useGasPrice","usePresaleState","data","userData","useToast","toastSuccess","Number","endedOn","userAvailableAmount","getBalanceAmount","BigNumber","availableOf","toString","userClaimedAmount","claimedOf","usePresaleUserData","inputCurrency","useCurrency","selectedCurrencyBalance","useCurrencyBalance","undefined","useState","inputAmount","setInputAmount","outputAmount","setOutputAmount","handleInput","useCallback","val","Math","floor","useEffect","handleSelectMax","toExact","handleBurn","receipt","callWithEstimateGas","BURN_ADDRESS","parseUnits","status","div","style","Page","minWidth","helpUrl","EXCHANGE_DOCS_URLS","justifyContent","flexDirection","alignItems","AppBody","id","minHeight","gap","my","CurrencyLogo","currency","size","Heading","scale","ml","name","FlexGap","symbol","balance","toSignificant","Button","variant","onClick","as","NumericalInput","className","value","onUserInput","padding","Box","mt","isLoading","pendingTx","endIcon","AutoRenewIcon","spin","color","ConnectWalletButton","BurnPage","Burn","chains","CHAIN_IDS"],"sourceRoot":""}